{"ast":null,"code":"var _jsxFileName = \"D:\\\\Full-Stack-Developer\\\\Build-Web-Orther-Food-Full-Stack-Widosoft\\\\client\\\\src\\\\Contexts\\\\GlobalState.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { RefreshTokenInitiate } from \"../redux/Action/ActionAdmin\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const GlobalState = /*#__PURE__*/createContext();\nexport const DataProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [token, setToken] = useState(false);\n  const {\n    Admin\n  } = useSelector(state => state.authAdmin);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const firstLogin = localStorage.getItem(\"firstLogin\");\n    console.log(firstLogin, \"get\");\n\n    if (firstLogin) {\n      const refreshToken = async () => {\n        const res = await axios.get(\"/admin/refreshToken\");\n        setToken(res.data.accesstoken);\n        console.log(res);\n        setTimeout(() => {\n          refreshToken();\n        }, 10 * 60 * 1000);\n      };\n\n      refreshToken();\n    }\n  }, []);\n  const data = {};\n  return /*#__PURE__*/_jsxDEV(GlobalState.Provider, {\n    value: data,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 10\n  }, this);\n};\n\n_s(DataProvider, \"UjBUKqj4xbs5Zt8sYMMEkvURoSA=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = DataProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"DataProvider\");","map":{"version":3,"sources":["D:/Full-Stack-Developer/Build-Web-Orther-Food-Full-Stack-Widosoft/client/src/Contexts/GlobalState.js"],"names":["React","createContext","useState","useEffect","axios","useDispatch","useSelector","RefreshTokenInitiate","GlobalState","DataProvider","children","token","setToken","Admin","state","authAdmin","dispatch","firstLogin","localStorage","getItem","console","log","refreshToken","res","get","data","accesstoken","setTimeout"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,EAAyCC,SAAzC,QAA0D,OAA1D;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,oBAAT,QAAqC,6BAArC;;AACA,OAAO,MAAMC,WAAW,gBAAGP,aAAa,EAAjC;AAEP,OAAO,MAAMQ,YAAY,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AAC5C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM;AAAEW,IAAAA;AAAF,MAAYP,WAAW,CAAEQ,KAAD,IAAWA,KAAK,CAACC,SAAlB,CAA7B;AACA,QAAMC,QAAQ,GAAGX,WAAW,EAA5B;AACAF,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMc,UAAU,GAAGC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAnB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,UAAZ,EAAwB,KAAxB;;AACA,QAAIA,UAAJ,EAAgB;AACd,YAAMK,YAAY,GAAG,YAAY;AAC/B,cAAMC,GAAG,GAAG,MAAMnB,KAAK,CAACoB,GAAN,CAAU,qBAAV,CAAlB;AACAZ,QAAAA,QAAQ,CAACW,GAAG,CAACE,IAAJ,CAASC,WAAV,CAAR;AACAN,QAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACAI,QAAAA,UAAU,CAAC,MAAM;AACfL,UAAAA,YAAY;AACb,SAFS,EAEP,KAAK,EAAL,GAAU,IAFH,CAAV;AAGD,OAPD;;AAQAA,MAAAA,YAAY;AACb;AACF,GAdQ,EAcN,EAdM,CAAT;AAgBA,QAAMG,IAAI,GAAG,EAAb;AACA,sBAAO,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEA,IAA7B;AAAA,cAAoCf;AAApC;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAtBM;;GAAMD,Y;UAEOH,W,EACDD,W;;;KAHNI,Y","sourcesContent":["import React, { createContext, useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { RefreshTokenInitiate } from \"../redux/Action/ActionAdmin\";\r\nexport const GlobalState = createContext();\r\n\r\nexport const DataProvider = ({ children }) => {\r\n  const [token, setToken] = useState(false);\r\n  const { Admin } = useSelector((state) => state.authAdmin);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    const firstLogin = localStorage.getItem(\"firstLogin\");\r\n    console.log(firstLogin, \"get\");\r\n    if (firstLogin) {\r\n      const refreshToken = async () => {\r\n        const res = await axios.get(\"/admin/refreshToken\");\r\n        setToken(res.data.accesstoken);\r\n        console.log(res);\r\n        setTimeout(() => {\r\n          refreshToken();\r\n        }, 10 * 60 * 1000);\r\n      };\r\n      refreshToken();\r\n    }\r\n  }, []);\r\n\r\n  const data = {};\r\n  return <GlobalState.Provider value={data}>{children}</GlobalState.Provider>;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}