{"ast":null,"code":"import axios from \"axios\";\nimport * as types from \"../ActionTypes\";\nimport { ToastContainer, toast } from \"react-toastify\"; //?Register\n\nexport const RegisterStart = () => ({\n  type: types.REGISTER_API_START\n});\n_c = RegisterStart;\nexport const RegisterSuccess = apis => ({\n  type: types.REGISTER_API_SUCCESS,\n  payload: apis\n});\n_c2 = RegisterSuccess;\nexport const RegisterFail = error => ({\n  type: types.REGISTER_API_FAIL,\n  payload: error\n}); //?Login\n\n_c3 = RegisterFail;\nexport const LoginStart = () => ({\n  type: types.LOGIN_API_START\n});\n_c4 = LoginStart;\nexport const LoginSuccess = api => ({\n  type: types.LOGIN_API_SUCCESS,\n  payload: api\n});\n_c5 = LoginSuccess;\nexport const LoginFail = error => ({\n  type: types.LOGIN_API_FAIL,\n  payload: error\n}); //?Logout\n\n_c6 = LoginFail;\nexport const LogoutStart = () => ({\n  type: types.LOGOUT_API_START\n});\n_c7 = LogoutStart;\nexport const LogoutSuccess = () => ({\n  type: types.LOGOUT_API_SUCCESS\n});\n_c8 = LogoutSuccess;\nexport const LogoutFail = () => ({\n  type: types.LOGOUT_API_FAIL\n}); //? refresh_token\n\n_c9 = LogoutFail;\nexport const RefreshTokenStart = () => ({\n  type: types.REFRESH_TOKEN_ADMIN_START\n});\n_c10 = RefreshTokenStart;\nexport const RefreshTokenSuccess = token => ({\n  type: types.REFRESH_TOKEN_ADMIN_SUCCESS,\n  payload: token\n});\n_c11 = RefreshTokenSuccess;\nexport const RefreshTokenFail = error => ({\n  type: types.REFRESH_TOKEN_ADMIN_FAIL,\n  payload: error\n}); //? InfoAdmin\n\n_c12 = RefreshTokenFail;\nexport const InfoAdminStart = () => ({\n  type: types.ACCEPT_TOKEN_GET_ADMIN_START\n});\n_c13 = InfoAdminStart;\nexport const InfoAdminSuccess = token => ({\n  type: types.ACCEPT_TOKEN_GET_ADMIN_SUCCESS,\n  payload: token\n});\n_c14 = InfoAdminSuccess;\nexport const InfoAdminFail = error => ({\n  type: types.ACCEPT_TOKEN_GET_ADMIN_FAIL,\n  payload: error\n}); //!Register\n\n_c15 = InfoAdminFail;\nexport const RegisterInitiate = (email, hoten, username, password, ngaysinh, gioitinh, dienthoai) => {\n  return async function (dispatch) {\n    dispatch(RegisterStart());\n    await axios.post(\"/admin/register\", {\n      email,\n      hoten,\n      username,\n      password,\n      ngaysinh,\n      gioitinh,\n      dienthoai\n    }).then(user => {\n      dispatch(RegisterSuccess(user.data));\n    }).catch(error => {\n      dispatch(RegisterFail(toast.error(error.data)));\n    });\n  };\n}; //!Login\n\n_c16 = RegisterInitiate;\nexport const loginInitiate = (email, password) => {\n  return async function (dispatch) {\n    dispatch(LoginStart());\n    await axios.post(\"/admin/login\", {\n      email,\n      password\n    }).then(user => {\n      dispatch(LoginSuccess(user.data));\n    }).catch(error => {\n      dispatch(LoginFail(toast.error(error.data)));\n    });\n  };\n}; //!Logout\n\nexport const LogoutInitiate = () => {\n  return async function (dispatch) {\n    dispatch(LogoutStart());\n    await axios.get(\"/admin/logout\").then(user => {\n      dispatch(LogoutSuccess(user, toast.success(\"Logout Success Thank You!\"), localStorage.removeItem(\"firstLogin\"), window.location.href = \"/login\"));\n    }).catch(error => {\n      dispatch(LoginFail(error));\n    });\n  };\n}; //!Refresh_token\n\n_c17 = LogoutInitiate;\nexport const RefreshTokenInitiate = token => {\n  return async function (dispatch) {\n    dispatch(RefreshTokenStart());\n    await axios.get(\"/admin/refreshToken\", {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(user => {\n      dispatch(RefreshTokenSuccess(user.data));\n    }).catch(error => {\n      dispatch(RefreshTokenFail(error.data));\n    });\n  };\n}; //!InfoAdmin\n\n_c18 = RefreshTokenInitiate;\nexport const InfoAdminInitiate = token => {\n  return async function (dispatch) {\n    dispatch(InfoAdminStart());\n    await axios.get(\"/admin/profile\", {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(user => {\n      dispatch(InfoAdminSuccess(user.data));\n    }).catch(error => {\n      dispatch(InfoAdminFail(error.data));\n    });\n  };\n}; //!ChangePassword\n\n_c19 = InfoAdminInitiate;\nexport const ChangeAdminInitiate = token => {\n  return async function (dispatch) {\n    dispatch(InfoAdminStart());\n    await axios.patch(\"/admin/changePassword\", {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(user => {\n      dispatch(InfoAdminSuccess(user.data));\n    }).catch(error => {\n      dispatch(InfoAdminFail(error.data));\n    });\n  };\n};\n_c20 = ChangeAdminInitiate;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13, _c14, _c15, _c16, _c17, _c18, _c19, _c20;\n\n$RefreshReg$(_c, \"RegisterStart\");\n$RefreshReg$(_c2, \"RegisterSuccess\");\n$RefreshReg$(_c3, \"RegisterFail\");\n$RefreshReg$(_c4, \"LoginStart\");\n$RefreshReg$(_c5, \"LoginSuccess\");\n$RefreshReg$(_c6, \"LoginFail\");\n$RefreshReg$(_c7, \"LogoutStart\");\n$RefreshReg$(_c8, \"LogoutSuccess\");\n$RefreshReg$(_c9, \"LogoutFail\");\n$RefreshReg$(_c10, \"RefreshTokenStart\");\n$RefreshReg$(_c11, \"RefreshTokenSuccess\");\n$RefreshReg$(_c12, \"RefreshTokenFail\");\n$RefreshReg$(_c13, \"InfoAdminStart\");\n$RefreshReg$(_c14, \"InfoAdminSuccess\");\n$RefreshReg$(_c15, \"InfoAdminFail\");\n$RefreshReg$(_c16, \"RegisterInitiate\");\n$RefreshReg$(_c17, \"LogoutInitiate\");\n$RefreshReg$(_c18, \"RefreshTokenInitiate\");\n$RefreshReg$(_c19, \"InfoAdminInitiate\");\n$RefreshReg$(_c20, \"ChangeAdminInitiate\");","map":{"version":3,"sources":["D:/Full-Stack-Developer/Build-Web-Orther-Food-Full-Stack-Widosoft/client/src/redux/Action/ActionAdmin.js"],"names":["axios","types","ToastContainer","toast","RegisterStart","type","REGISTER_API_START","RegisterSuccess","apis","REGISTER_API_SUCCESS","payload","RegisterFail","error","REGISTER_API_FAIL","LoginStart","LOGIN_API_START","LoginSuccess","api","LOGIN_API_SUCCESS","LoginFail","LOGIN_API_FAIL","LogoutStart","LOGOUT_API_START","LogoutSuccess","LOGOUT_API_SUCCESS","LogoutFail","LOGOUT_API_FAIL","RefreshTokenStart","REFRESH_TOKEN_ADMIN_START","RefreshTokenSuccess","token","REFRESH_TOKEN_ADMIN_SUCCESS","RefreshTokenFail","REFRESH_TOKEN_ADMIN_FAIL","InfoAdminStart","ACCEPT_TOKEN_GET_ADMIN_START","InfoAdminSuccess","ACCEPT_TOKEN_GET_ADMIN_SUCCESS","InfoAdminFail","ACCEPT_TOKEN_GET_ADMIN_FAIL","RegisterInitiate","email","hoten","username","password","ngaysinh","gioitinh","dienthoai","dispatch","post","then","user","data","catch","loginInitiate","LogoutInitiate","get","success","localStorage","removeItem","window","location","href","RefreshTokenInitiate","headers","Authorization","InfoAdminInitiate","ChangeAdminInitiate","patch"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport * as types from \"../ActionTypes\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\n\r\n//?Register\r\nexport const RegisterStart = () => ({\r\n  type: types.REGISTER_API_START,\r\n});\r\nexport const RegisterSuccess = (apis) => ({\r\n  type: types.REGISTER_API_SUCCESS,\r\n  payload: apis,\r\n});\r\nexport const RegisterFail = (error) => ({\r\n  type: types.REGISTER_API_FAIL,\r\n  payload: error,\r\n});\r\n//?Login\r\nexport const LoginStart = () => ({\r\n  type: types.LOGIN_API_START,\r\n});\r\nexport const LoginSuccess = (api) => ({\r\n  type: types.LOGIN_API_SUCCESS,\r\n  payload: api,\r\n});\r\nexport const LoginFail = (error) => ({\r\n  type: types.LOGIN_API_FAIL,\r\n  payload: error,\r\n});\r\n//?Logout\r\nexport const LogoutStart = () => ({\r\n  type: types.LOGOUT_API_START,\r\n});\r\nexport const LogoutSuccess = () => ({\r\n  type: types.LOGOUT_API_SUCCESS,\r\n});\r\nexport const LogoutFail = () => ({\r\n  type: types.LOGOUT_API_FAIL,\r\n});\r\n\r\n//? refresh_token\r\nexport const RefreshTokenStart = () => ({\r\n  type: types.REFRESH_TOKEN_ADMIN_START,\r\n});\r\nexport const RefreshTokenSuccess = (token) => ({\r\n  type: types.REFRESH_TOKEN_ADMIN_SUCCESS,\r\n  payload: token,\r\n});\r\nexport const RefreshTokenFail = (error) => ({\r\n  type: types.REFRESH_TOKEN_ADMIN_FAIL,\r\n  payload: error,\r\n});\r\n\r\n//? InfoAdmin\r\nexport const InfoAdminStart = () => ({\r\n  type: types.ACCEPT_TOKEN_GET_ADMIN_START,\r\n});\r\nexport const InfoAdminSuccess = (token) => ({\r\n  type: types.ACCEPT_TOKEN_GET_ADMIN_SUCCESS,\r\n  payload: token,\r\n});\r\nexport const InfoAdminFail = (error) => ({\r\n  type: types.ACCEPT_TOKEN_GET_ADMIN_FAIL,\r\n  payload: error,\r\n});\r\n\r\n//!Register\r\nexport const RegisterInitiate = (\r\n  email,\r\n  hoten,\r\n  username,\r\n  password,\r\n  ngaysinh,\r\n  gioitinh,\r\n  dienthoai\r\n) => {\r\n  return async function (dispatch) {\r\n    dispatch(RegisterStart());\r\n    await axios\r\n      .post(\"/admin/register\", {\r\n        email,\r\n        hoten,\r\n        username,\r\n        password,\r\n        ngaysinh,\r\n        gioitinh,\r\n        dienthoai,\r\n      })\r\n      .then((user) => {\r\n        dispatch(RegisterSuccess(user.data));\r\n      })\r\n      .catch((error) => {\r\n        dispatch(RegisterFail(toast.error(error.data)));\r\n      });\r\n  };\r\n};\r\n//!Login\r\nexport const loginInitiate = (email, password) => {\r\n  return async function (dispatch) {\r\n    dispatch(LoginStart());\r\n    await axios\r\n      .post(\"/admin/login\", { email, password })\r\n      .then((user) => {\r\n        dispatch(LoginSuccess(user.data));\r\n      })\r\n      .catch((error) => {\r\n        dispatch(LoginFail(toast.error(error.data)));\r\n      });\r\n  };\r\n};\r\n//!Logout\r\nexport const LogoutInitiate = () => {\r\n  return async function (dispatch) {\r\n    dispatch(LogoutStart());\r\n    await axios\r\n      .get(\"/admin/logout\")\r\n      .then((user) => {\r\n        dispatch(\r\n          LogoutSuccess(\r\n            user,\r\n            toast.success(\"Logout Success Thank You!\"),\r\n            localStorage.removeItem(\"firstLogin\"),\r\n            (window.location.href = \"/login\")\r\n          )\r\n        );\r\n      })\r\n      .catch((error) => {\r\n        dispatch(LoginFail(error));\r\n      });\r\n  };\r\n};\r\n\r\n//!Refresh_token\r\nexport const RefreshTokenInitiate = (token) => {\r\n  return async function (dispatch) {\r\n    dispatch(RefreshTokenStart());\r\n    await axios\r\n      .get(\"/admin/refreshToken\", {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((user) => {\r\n        dispatch(RefreshTokenSuccess(user.data));\r\n      })\r\n      .catch((error) => {\r\n        dispatch(RefreshTokenFail(error.data));\r\n      });\r\n  };\r\n};\r\n//!InfoAdmin\r\nexport const InfoAdminInitiate = (token) => {\r\n  return async function (dispatch) {\r\n    dispatch(InfoAdminStart());\r\n    await axios\r\n      .get(\"/admin/profile\", {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((user) => {\r\n        dispatch(InfoAdminSuccess(user.data));\r\n      })\r\n      .catch((error) => {\r\n        dispatch(InfoAdminFail(error.data));\r\n      });\r\n  };\r\n};\r\n//!ChangePassword\r\nexport const ChangeAdminInitiate = (token) => {\r\n  return async function (dispatch) {\r\n    dispatch(InfoAdminStart());\r\n    await axios\r\n      .patch(\"/admin/changePassword\", {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((user) => {\r\n        dispatch(InfoAdminSuccess(user.data));\r\n      })\r\n      .catch((error) => {\r\n        dispatch(InfoAdminFail(error.data));\r\n      });\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}