{"ast":null,"code":"var _jsxFileName = \"D:\\\\Full-Stack-Developer\\\\Build-Web-Orther-Food-Full-Stack-Widosoft\\\\client\\\\src\\\\Components\\\\AdminComponent\\\\ChangePassword.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect, useRef } from \"react\";\nimport { UserListStyle } from \"../../Styles/StylePages/Admin/NewUserStyle\";\nimport axios from \"axios\";\nimport swal from \"sweetalert\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport { ChangeAdminInitiate } from \"../../redux/Action/ActionAdmin\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  email: \"\",\n  password: \"\",\n  confirmPassword: \"\"\n};\n\nconst ChangePassword = () => {\n  _s();\n\n  var _errors$password, _errors$password2, _errors$passwordConfi, _errors$passwordConfi2;\n\n  const {\n    register,\n    formState: {\n      errors\n    },\n    handleSubmit,\n    watch,\n    control,\n    reset\n  } = useForm();\n  const passwords = useRef({});\n  const [state, setState] = useState(initialState);\n  const {\n    InfoAdmin,\n    token,\n    Admin,\n    changePassword\n  } = useSelector(state => state.authAdmin);\n  const {\n    email,\n    password,\n    confirmPassword\n  } = state;\n  const {\n    id\n  } = useParams();\n\n  const handleChangeInput = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setState({ ...state,\n      [name]: value\n    });\n  };\n\n  const dispatch = useDispatch();\n\n  const handleSubmitForm = data => {\n    dispatch(ChangeAdminInitiate(token.accessToken, { ...data\n    }));\n  };\n\n  useEffect(() => {\n    if (changePassword.status === 200) {\n      swal(`${changePassword.message} ü§©`, {\n        icon: \"success\"\n      });\n    } else if (changePassword.status === 400) {\n      swal(\"Edit Password Fail ü§®\", {\n        icon: \"error\"\n      });\n    }\n  }, [changePassword]);\n  useEffect(() => {\n    if (id) {\n      setState({ ...InfoAdmin.data[0]\n      });\n    } else {\n      setState(initialState);\n    }\n  }, [id, InfoAdmin]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(UserListStyle, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"newUser\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"newUserTitle\",\n        children: \"Change Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"newUserForm\",\n        onSubmit: handleSubmit(handleSubmitForm),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"newUserItem\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            placeholder: \"john@gmail.com\",\n            name: \"email\",\n            value: email,\n            onChange: handleChangeInput,\n            disabled: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"newUserItem\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"password\", {\n              required: true,\n              minLength: {\n                value: 6\n              }\n            }),\n            type: \"password\",\n            placeholder: \"password\",\n            name: \"password\" // value={password}\n            // onChange={handleChangeInput}\n            ,\n            name: \"password\",\n            id: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: \"red\"\n            },\n            children: [((_errors$password = errors.password) === null || _errors$password === void 0 ? void 0 : _errors$password.type) === \"required\" && \"M·ªùi b·∫°n nh·∫≠p ƒë·∫ßy ƒë·ªß m·∫≠t kh·∫©u. \", (errors === null || errors === void 0 ? void 0 : (_errors$password2 = errors.password) === null || _errors$password2 === void 0 ? void 0 : _errors$password2.type) === \"minLength\" && \"M·∫≠t kh·∫©u c·ªßa b·∫°n ph·∫£i 6 k√≠ t·ª± tr·ªü l√™n !!\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"newUserItem\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Confirm Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"passwordConfirm\", {\n              required: true,\n              validate: value => value === passwords.current || \"The passwords do not match\"\n            }),\n            type: \"password\",\n            placeholder: \"confirmPassword\",\n            name: \"confirmPassword\" // value={confirmPassword}\n            // onChange={handleChangeInput}\n            ,\n            id: \"passwordConfirm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: \"red\"\n            },\n            children: [((_errors$passwordConfi = errors.passwordConfirm) === null || _errors$passwordConfi === void 0 ? void 0 : _errors$passwordConfi.type) === \"required\" && \"M·ªùi b·∫°n nh·∫≠p l·∫°i m·∫≠t kh·∫©u.\", ((_errors$passwordConfi2 = errors.passwordConfirm) === null || _errors$passwordConfi2 === void 0 ? void 0 : _errors$passwordConfi2.type) === \"validate\" && \"M·∫≠t kh·∫©u nh·∫≠p l·∫°i kh√¥ng kh·ªõp!   \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"newUserButton\",\n          children: \"Change\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ChangePassword, \"pVGqPkhbkwFZai4llyYseYpBFnM=\", false, function () {\n  return [useForm, useSelector, useParams, useDispatch];\n});\n\n_c = ChangePassword;\nexport default ChangePassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChangePassword\");","map":{"version":3,"sources":["D:/Full-Stack-Developer/Build-Web-Orther-Food-Full-Stack-Widosoft/client/src/Components/AdminComponent/ChangePassword.js"],"names":["React","useState","useContext","useEffect","useRef","UserListStyle","axios","swal","useDispatch","useSelector","useParams","useForm","Controller","ChangeAdminInitiate","initialState","email","password","confirmPassword","ChangePassword","register","formState","errors","handleSubmit","watch","control","reset","passwords","state","setState","InfoAdmin","token","Admin","changePassword","authAdmin","id","handleChangeInput","e","name","value","target","dispatch","handleSubmitForm","data","accessToken","status","message","icon","required","minLength","color","type","validate","current","passwordConfirm"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect, useRef } from \"react\";\r\nimport { UserListStyle } from \"../../Styles/StylePages/Admin/NewUserStyle\";\r\nimport axios from \"axios\";\r\nimport swal from \"sweetalert\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\n\r\nimport { ChangeAdminInitiate } from \"../../redux/Action/ActionAdmin\";\r\nconst initialState = {\r\n  email: \"\",\r\n  password: \"\",\r\n  confirmPassword: \"\",\r\n};\r\nconst ChangePassword = () => {\r\n  const {\r\n    register,\r\n    formState: { errors },\r\n    handleSubmit,\r\n    watch,\r\n    control,\r\n    reset,\r\n  } = useForm();\r\n  const passwords = useRef({});\r\n  const [state, setState] = useState(initialState);\r\n  const { InfoAdmin, token, Admin, changePassword } = useSelector(\r\n    (state) => state.authAdmin\r\n  );\r\n  const { email, password, confirmPassword } = state;\r\n  const { id } = useParams();\r\n  const handleChangeInput = (e) => {\r\n    const { name, value } = e.target;\r\n    setState({ ...state, [name]: value });\r\n  };\r\n  const dispatch = useDispatch();\r\n  const handleSubmitForm = (data) => {\r\n    dispatch(ChangeAdminInitiate(token.accessToken, { ...data }));\r\n  };\r\n  useEffect(() => {\r\n    if (changePassword.status === 200) {\r\n      swal(`${changePassword.message} ü§©`, {\r\n        icon: \"success\",\r\n      });\r\n    } else if (changePassword.status === 400) {\r\n      swal(\"Edit Password Fail ü§®\", {\r\n        icon: \"error\",\r\n      });\r\n    }\r\n  }, [changePassword]);\r\n  useEffect(() => {\r\n    if (id) {\r\n      setState({ ...InfoAdmin.data[0] });\r\n    } else {\r\n      setState(initialState);\r\n    }\r\n  }, [id, InfoAdmin]);\r\n  return (\r\n    <>\r\n      <UserListStyle />\r\n      <div className=\"newUser\">\r\n        <h1 className=\"newUserTitle\">Change Password</h1>\r\n        <form className=\"newUserForm\" onSubmit={handleSubmit(handleSubmitForm)}>\r\n          <div className=\"newUserItem\">\r\n            <label>Email</label>\r\n            <input\r\n              type=\"email\"\r\n              placeholder=\"john@gmail.com\"\r\n              name=\"email\"\r\n              value={email}\r\n              onChange={handleChangeInput}\r\n              disabled\r\n            />\r\n          </div>\r\n          <div className=\"newUserItem\">\r\n            <label>Password</label>\r\n            <input\r\n              {...register(\"password\", {\r\n                required: true,\r\n                minLength: {\r\n                  value: 6,\r\n                },\r\n              })}\r\n              type=\"password\"\r\n              placeholder=\"password\"\r\n              name=\"password\"\r\n              // value={password}\r\n              // onChange={handleChangeInput}\r\n              name=\"password\"\r\n              id=\"password\"\r\n            />\r\n            <span style={{ color: \"red\" }}>\r\n              {errors.password?.type === \"required\" &&\r\n                \"M·ªùi b·∫°n nh·∫≠p ƒë·∫ßy ƒë·ªß m·∫≠t kh·∫©u. \"}\r\n              {errors?.password?.type === \"minLength\" &&\r\n                \"M·∫≠t kh·∫©u c·ªßa b·∫°n ph·∫£i 6 k√≠ t·ª± tr·ªü l√™n !!\"}\r\n            </span>\r\n          </div>\r\n          <div className=\"newUserItem\">\r\n            <label>Confirm Password</label>\r\n            <input\r\n              {...register(\"passwordConfirm\", {\r\n                required: true,\r\n                validate: (value) =>\r\n                  value === passwords.current || \"The passwords do not match\",\r\n              })}\r\n              type=\"password\"\r\n              placeholder=\"confirmPassword\"\r\n              name=\"confirmPassword\"\r\n              // value={confirmPassword}\r\n              // onChange={handleChangeInput}\r\n              id=\"passwordConfirm\"\r\n            />\r\n            <span style={{ color: \"red\" }}>\r\n              {errors.passwordConfirm?.type === \"required\" &&\r\n                \"M·ªùi b·∫°n nh·∫≠p l·∫°i m·∫≠t kh·∫©u.\"}\r\n              {errors.passwordConfirm?.type === \"validate\" &&\r\n                \"M·∫≠t kh·∫©u nh·∫≠p l·∫°i kh√¥ng kh·ªõp!   \"}\r\n            </span>\r\n          </div>\r\n          <button className=\"newUserButton\">Change</button>\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChangePassword;\r\n"]},"metadata":{},"sourceType":"module"}