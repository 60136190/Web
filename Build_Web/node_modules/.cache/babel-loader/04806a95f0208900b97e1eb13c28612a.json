{"ast":null,"code":"import axios from \"axios\";\nimport * as types from \"../ActionTypes\";\nimport { toast } from \"react-toastify\";\nimport swal from \"sweetalert\"; //?Register\n\nexport const RegisterStart = () => ({\n  type: types.REGISTER_API_START\n});\n_c = RegisterStart;\nexport const RegisterSuccess = apis => ({\n  type: types.REGISTER_API_SUCCESS,\n  payload: apis\n});\n_c2 = RegisterSuccess;\nexport const RegisterFail = error => ({\n  type: types.REGISTER_API_FAIL,\n  payload: error\n}); //?Login\n\n_c3 = RegisterFail;\nexport const LoginStart = () => ({\n  type: types.LOGIN_API_START\n});\n_c4 = LoginStart;\nexport const LoginSuccess = api => ({\n  type: types.LOGIN_API_SUCCESS,\n  payload: api\n});\n_c5 = LoginSuccess;\nexport const LoginFail = error => ({\n  type: types.LOGIN_API_FAIL,\n  payload: error\n}); //?Logout\n\n_c6 = LoginFail;\nexport const LogoutStart = () => ({\n  type: types.LOGOUT_API_START\n});\n_c7 = LogoutStart;\nexport const LogoutSuccess = () => ({\n  type: types.LOGOUT_API_SUCCESS\n});\n_c8 = LogoutSuccess;\nexport const LogoutFail = () => ({\n  type: types.LOGOUT_API_FAIL\n}); //?Logout\n\n_c9 = LogoutFail;\nexport const ForgetStart = () => ({\n  type: types.FORGET_ADMIN_START\n});\n_c10 = ForgetStart;\nexport const ForgetSuccess = admin => ({\n  type: types.FORGET_ADMIN_SUCCESS,\n  payload: admin\n});\n_c11 = ForgetSuccess;\nexport const ForgetFail = error => ({\n  type: types.FORGET_ADMIN_FAIL,\n  payload: error\n}); //? refresh_token\n\n_c12 = ForgetFail;\nexport const RefreshTokenStart = () => ({\n  type: types.REFRESH_TOKEN_ADMIN_START\n});\n_c13 = RefreshTokenStart;\nexport const RefreshTokenSuccess = token => ({\n  type: types.REFRESH_TOKEN_ADMIN_SUCCESS,\n  payload: token\n});\n_c14 = RefreshTokenSuccess;\nexport const RefreshTokenFail = error => ({\n  type: types.REFRESH_TOKEN_ADMIN_FAIL,\n  payload: error\n}); //? InfoAdmin\n\n_c15 = RefreshTokenFail;\nexport const InfoAdminStart = () => ({\n  type: types.ACCEPT_TOKEN_GET_ADMIN_START\n});\n_c16 = InfoAdminStart;\nexport const InfoAdminSuccess = token => ({\n  type: types.ACCEPT_TOKEN_GET_ADMIN_SUCCESS,\n  payload: token\n});\n_c17 = InfoAdminSuccess;\nexport const InfoAdminFail = error => ({\n  type: types.ACCEPT_TOKEN_GET_ADMIN_FAIL,\n  payload: error\n}); //? ChangePassword\n\n_c18 = InfoAdminFail;\nexport const ChangePasswordAdminStart = () => ({\n  type: types.CHANGE_ADMIN_PASSWORD_START\n});\n_c19 = ChangePasswordAdminStart;\nexport const ChangePasswordAdminSuccess = token => ({\n  type: types.CHANGE_ADMIN_PASSWORD_SUCCESS,\n  payload: token\n});\n_c20 = ChangePasswordAdminSuccess;\nexport const ChangePasswordAdminFail = error => ({\n  type: types.CHANGE_ADMIN_PASSWORD_FAIL,\n  payload: error\n}); //? GetAll User\n\n_c21 = ChangePasswordAdminFail;\nexport const GetAllUserStart = () => ({\n  type: types.GET_ALL_USER_START\n});\n_c22 = GetAllUserStart;\nexport const GetAllUserSuccess = token => ({\n  type: types.GET_ALL_USER_SUCCESS,\n  payload: token\n});\n_c23 = GetAllUserSuccess;\nexport const GetAllUserFail = error => ({\n  type: types.GET_ALL_USER_FAIL,\n  payload: error\n}); //? GetAll Amin\n\n_c24 = GetAllUserFail;\nexport const GetAllAdminStart = () => ({\n  type: types.GET_ALL_ADMIN_START\n});\n_c25 = GetAllAdminStart;\nexport const GetAllAdminSuccess = token => ({\n  type: types.GET_ALL_ADMIN_SUCCESS,\n  payload: token\n});\n_c26 = GetAllAdminSuccess;\nexport const GetAllAdminFail = error => ({\n  type: types.GET_ALL_USER_FAIL,\n  payload: error\n}); //?Account register user new 3 day\n\n_c27 = GetAllAdminFail;\nexport const GetAccountNewStart = () => ({\n  type: types.GET_ACCOUNT_NEW_START\n});\n_c28 = GetAccountNewStart;\nexport const GetAccountNewSuccess = token => ({\n  type: types.GET_ACCOUNT_NEW_SUCCESS,\n  payload: token\n});\n_c29 = GetAccountNewSuccess;\nexport const GetAccountNewFail = error => ({\n  type: types.GET_ACCOUNT_NEW_FAIL,\n  payload: error\n}); //!Register\n\n_c30 = GetAccountNewFail;\nexport const RegisterInitiate = (email, hoten, username, password, ngaysinh, gioitinh, dienthoai) => {\n  return async function (dispatch) {\n    dispatch(RegisterStart());\n    await axios.post(\"/admin/register\", {\n      email,\n      hoten,\n      username,\n      password,\n      ngaysinh,\n      gioitinh,\n      dienthoai\n    }).then(user => {\n      dispatch(RegisterSuccess(user.data));\n    }).catch(error => {\n      dispatch(RegisterFail(toast.error(error.data)));\n    });\n  };\n}; //!Login\n\n_c31 = RegisterInitiate;\nexport const loginInitiate = (email, password) => {\n  return async function (dispatch) {\n    dispatch(LoginStart());\n    await axios.post(\"/admin/login\", {\n      email,\n      password\n    }).then(user => {\n      dispatch(LoginSuccess(user.data));\n    }).catch(error => {\n      dispatch(LoginFail(toast.error(error.data)));\n    });\n  };\n}; //!Logout\n\nexport const LogoutInitiate = () => {\n  return async function (dispatch) {\n    dispatch(LogoutStart());\n    await axios.get(\"/admin/logout\").then(user => {\n      dispatch(LogoutSuccess(user, toast.success(\"Logout Success Thank You!\"), localStorage.removeItem(\"firstLogin\"), window.location.href = \"/login\"));\n    }).catch(error => {\n      dispatch(LoginFail(error));\n    });\n  };\n}; //!Forget Admin\n\n_c32 = LogoutInitiate;\nexport const ForgetAdminInitiate = email => {\n  return async function (dispatch) {\n    dispatch(ForgetStart());\n    await axios.post(\"/admin/forgotPassword\", {\n      email\n    }).then(user => {\n      dispatch(ForgetSuccess(user.data));\n    }).catch(error => {\n      dispatch(ForgetFail(error.data));\n    });\n  };\n}; //!Refresh_token\n\n_c33 = ForgetAdminInitiate;\nexport const RefreshTokenInitiate = token => {\n  return async function (dispatch) {\n    dispatch(RefreshTokenStart());\n    await axios.get(\"/admin/refreshToken\", {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(user => {\n      dispatch(RefreshTokenSuccess(user.data));\n    }).catch(error => {\n      dispatch(RefreshTokenFail(error.data));\n    });\n  };\n}; //!InfoAdmin\n\n_c34 = RefreshTokenInitiate;\nexport const InfoAdminInitiate = token => {\n  return async function (dispatch) {\n    dispatch(InfoAdminStart());\n    await axios.get(\"/admin/profile\", {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(user => {\n      dispatch(InfoAdminSuccess(user.data));\n    }).catch(error => {\n      dispatch(InfoAdminFail(error.data));\n    });\n  };\n}; //!ChangePassword\n\n_c35 = InfoAdminInitiate;\nexport const ChangeAdminInitiate = (token, _ref) => {\n  let { ...state\n  } = _ref;\n  return async function (dispatch) {\n    dispatch(ChangePasswordAdminStart());\n    await axios.patch(\"/admin/changePassword\", { ...state\n    }, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(user => {\n      dispatch(ChangePasswordAdminSuccess(user.data), swal(\"Change password successfully ðŸ¤©\", {\n        icon: \"success\"\n      }));\n    }).catch(error => {\n      dispatch(ChangePasswordAdminFail(error.data));\n    });\n  };\n}; //!Get All User\n\n_c36 = ChangeAdminInitiate;\nexport const GetAllUserInitiate = token => {\n  return async function (dispatch) {\n    dispatch(GetAllUserStart());\n    await axios.get(\"/admin/customerAccount\", {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(user => {\n      dispatch(GetAllUserSuccess(user.data));\n    }).catch(error => {\n      dispatch(GetAllUserFail(error.data));\n    });\n  };\n}; //!Get All Admin\n\n_c37 = GetAllUserInitiate;\nexport const GetAllAdminInitiate = token => {\n  return async function (dispatch) {\n    dispatch(GetAllAdminStart());\n    await axios.get(\"/admin/adminAccount\", {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(user => {\n      dispatch(GetAllAdminSuccess(user.data));\n    }).catch(error => {\n      dispatch(GetAllAdminFail(error.data));\n    });\n  };\n}; //!Account register user new 3 day\n\n_c38 = GetAllAdminInitiate;\nexport const GetAccountNewInitiate = token => {\n  return async function (dispatch) {\n    dispatch(GetAccountNewStart());\n    await axios.get(\"/admin/newUser\", {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(user => {\n      dispatch(GetAccountNewSuccess(user.data));\n    }).catch(error => {\n      dispatch(GetAccountNewFail(error.data));\n    });\n  };\n};\n_c39 = GetAccountNewInitiate;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13, _c14, _c15, _c16, _c17, _c18, _c19, _c20, _c21, _c22, _c23, _c24, _c25, _c26, _c27, _c28, _c29, _c30, _c31, _c32, _c33, _c34, _c35, _c36, _c37, _c38, _c39;\n\n$RefreshReg$(_c, \"RegisterStart\");\n$RefreshReg$(_c2, \"RegisterSuccess\");\n$RefreshReg$(_c3, \"RegisterFail\");\n$RefreshReg$(_c4, \"LoginStart\");\n$RefreshReg$(_c5, \"LoginSuccess\");\n$RefreshReg$(_c6, \"LoginFail\");\n$RefreshReg$(_c7, \"LogoutStart\");\n$RefreshReg$(_c8, \"LogoutSuccess\");\n$RefreshReg$(_c9, \"LogoutFail\");\n$RefreshReg$(_c10, \"ForgetStart\");\n$RefreshReg$(_c11, \"ForgetSuccess\");\n$RefreshReg$(_c12, \"ForgetFail\");\n$RefreshReg$(_c13, \"RefreshTokenStart\");\n$RefreshReg$(_c14, \"RefreshTokenSuccess\");\n$RefreshReg$(_c15, \"RefreshTokenFail\");\n$RefreshReg$(_c16, \"InfoAdminStart\");\n$RefreshReg$(_c17, \"InfoAdminSuccess\");\n$RefreshReg$(_c18, \"InfoAdminFail\");\n$RefreshReg$(_c19, \"ChangePasswordAdminStart\");\n$RefreshReg$(_c20, \"ChangePasswordAdminSuccess\");\n$RefreshReg$(_c21, \"ChangePasswordAdminFail\");\n$RefreshReg$(_c22, \"GetAllUserStart\");\n$RefreshReg$(_c23, \"GetAllUserSuccess\");\n$RefreshReg$(_c24, \"GetAllUserFail\");\n$RefreshReg$(_c25, \"GetAllAdminStart\");\n$RefreshReg$(_c26, \"GetAllAdminSuccess\");\n$RefreshReg$(_c27, \"GetAllAdminFail\");\n$RefreshReg$(_c28, \"GetAccountNewStart\");\n$RefreshReg$(_c29, \"GetAccountNewSuccess\");\n$RefreshReg$(_c30, \"GetAccountNewFail\");\n$RefreshReg$(_c31, \"RegisterInitiate\");\n$RefreshReg$(_c32, \"LogoutInitiate\");\n$RefreshReg$(_c33, \"ForgetAdminInitiate\");\n$RefreshReg$(_c34, \"RefreshTokenInitiate\");\n$RefreshReg$(_c35, \"InfoAdminInitiate\");\n$RefreshReg$(_c36, \"ChangeAdminInitiate\");\n$RefreshReg$(_c37, \"GetAllUserInitiate\");\n$RefreshReg$(_c38, \"GetAllAdminInitiate\");\n$RefreshReg$(_c39, \"GetAccountNewInitiate\");","map":{"version":3,"sources":["D:/Full-Stack-Developer/Build-Web-Orther-Food-Full-Stack-Widosoft/client/src/redux/Action/ActionAdmin.js"],"names":["axios","types","toast","swal","RegisterStart","type","REGISTER_API_START","RegisterSuccess","apis","REGISTER_API_SUCCESS","payload","RegisterFail","error","REGISTER_API_FAIL","LoginStart","LOGIN_API_START","LoginSuccess","api","LOGIN_API_SUCCESS","LoginFail","LOGIN_API_FAIL","LogoutStart","LOGOUT_API_START","LogoutSuccess","LOGOUT_API_SUCCESS","LogoutFail","LOGOUT_API_FAIL","ForgetStart","FORGET_ADMIN_START","ForgetSuccess","admin","FORGET_ADMIN_SUCCESS","ForgetFail","FORGET_ADMIN_FAIL","RefreshTokenStart","REFRESH_TOKEN_ADMIN_START","RefreshTokenSuccess","token","REFRESH_TOKEN_ADMIN_SUCCESS","RefreshTokenFail","REFRESH_TOKEN_ADMIN_FAIL","InfoAdminStart","ACCEPT_TOKEN_GET_ADMIN_START","InfoAdminSuccess","ACCEPT_TOKEN_GET_ADMIN_SUCCESS","InfoAdminFail","ACCEPT_TOKEN_GET_ADMIN_FAIL","ChangePasswordAdminStart","CHANGE_ADMIN_PASSWORD_START","ChangePasswordAdminSuccess","CHANGE_ADMIN_PASSWORD_SUCCESS","ChangePasswordAdminFail","CHANGE_ADMIN_PASSWORD_FAIL","GetAllUserStart","GET_ALL_USER_START","GetAllUserSuccess","GET_ALL_USER_SUCCESS","GetAllUserFail","GET_ALL_USER_FAIL","GetAllAdminStart","GET_ALL_ADMIN_START","GetAllAdminSuccess","GET_ALL_ADMIN_SUCCESS","GetAllAdminFail","GetAccountNewStart","GET_ACCOUNT_NEW_START","GetAccountNewSuccess","GET_ACCOUNT_NEW_SUCCESS","GetAccountNewFail","GET_ACCOUNT_NEW_FAIL","RegisterInitiate","email","hoten","username","password","ngaysinh","gioitinh","dienthoai","dispatch","post","then","user","data","catch","loginInitiate","LogoutInitiate","get","success","localStorage","removeItem","window","location","href","ForgetAdminInitiate","RefreshTokenInitiate","headers","Authorization","InfoAdminInitiate","ChangeAdminInitiate","state","patch","icon","GetAllUserInitiate","GetAllAdminInitiate","GetAccountNewInitiate"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport * as types from \"../ActionTypes\";\r\nimport { toast } from \"react-toastify\";\r\nimport swal from \"sweetalert\";\r\n//?Register\r\nexport const RegisterStart = () => ({\r\n  type: types.REGISTER_API_START,\r\n});\r\nexport const RegisterSuccess = (apis) => ({\r\n  type: types.REGISTER_API_SUCCESS,\r\n  payload: apis,\r\n});\r\nexport const RegisterFail = (error) => ({\r\n  type: types.REGISTER_API_FAIL,\r\n  payload: error,\r\n});\r\n//?Login\r\nexport const LoginStart = () => ({\r\n  type: types.LOGIN_API_START,\r\n});\r\nexport const LoginSuccess = (api) => ({\r\n  type: types.LOGIN_API_SUCCESS,\r\n  payload: api,\r\n});\r\nexport const LoginFail = (error) => ({\r\n  type: types.LOGIN_API_FAIL,\r\n  payload: error,\r\n});\r\n//?Logout\r\nexport const LogoutStart = () => ({\r\n  type: types.LOGOUT_API_START,\r\n});\r\nexport const LogoutSuccess = () => ({\r\n  type: types.LOGOUT_API_SUCCESS,\r\n});\r\nexport const LogoutFail = () => ({\r\n  type: types.LOGOUT_API_FAIL,\r\n});\r\n\r\n//?Logout\r\nexport const ForgetStart = () => ({\r\n  type: types.FORGET_ADMIN_START,\r\n});\r\nexport const ForgetSuccess = (admin) => ({\r\n  type: types.FORGET_ADMIN_SUCCESS,\r\n  payload: admin,\r\n});\r\nexport const ForgetFail = (error) => ({\r\n  type: types.FORGET_ADMIN_FAIL,\r\n  payload: error,\r\n});\r\n\r\n//? refresh_token\r\nexport const RefreshTokenStart = () => ({\r\n  type: types.REFRESH_TOKEN_ADMIN_START,\r\n});\r\nexport const RefreshTokenSuccess = (token) => ({\r\n  type: types.REFRESH_TOKEN_ADMIN_SUCCESS,\r\n  payload: token,\r\n});\r\nexport const RefreshTokenFail = (error) => ({\r\n  type: types.REFRESH_TOKEN_ADMIN_FAIL,\r\n  payload: error,\r\n});\r\n\r\n//? InfoAdmin\r\nexport const InfoAdminStart = () => ({\r\n  type: types.ACCEPT_TOKEN_GET_ADMIN_START,\r\n});\r\nexport const InfoAdminSuccess = (token) => ({\r\n  type: types.ACCEPT_TOKEN_GET_ADMIN_SUCCESS,\r\n  payload: token,\r\n});\r\nexport const InfoAdminFail = (error) => ({\r\n  type: types.ACCEPT_TOKEN_GET_ADMIN_FAIL,\r\n  payload: error,\r\n});\r\n\r\n//? ChangePassword\r\nexport const ChangePasswordAdminStart = () => ({\r\n  type: types.CHANGE_ADMIN_PASSWORD_START,\r\n});\r\nexport const ChangePasswordAdminSuccess = (token) => ({\r\n  type: types.CHANGE_ADMIN_PASSWORD_SUCCESS,\r\n  payload: token,\r\n});\r\nexport const ChangePasswordAdminFail = (error) => ({\r\n  type: types.CHANGE_ADMIN_PASSWORD_FAIL,\r\n  payload: error,\r\n});\r\n\r\n//? GetAll User\r\nexport const GetAllUserStart = () => ({\r\n  type: types.GET_ALL_USER_START,\r\n});\r\nexport const GetAllUserSuccess = (token) => ({\r\n  type: types.GET_ALL_USER_SUCCESS,\r\n  payload: token,\r\n});\r\nexport const GetAllUserFail = (error) => ({\r\n  type: types.GET_ALL_USER_FAIL,\r\n  payload: error,\r\n});\r\n//? GetAll Amin\r\nexport const GetAllAdminStart = () => ({\r\n  type: types.GET_ALL_ADMIN_START,\r\n});\r\nexport const GetAllAdminSuccess = (token) => ({\r\n  type: types.GET_ALL_ADMIN_SUCCESS,\r\n  payload: token,\r\n});\r\nexport const GetAllAdminFail = (error) => ({\r\n  type: types.GET_ALL_USER_FAIL,\r\n  payload: error,\r\n});\r\n//?Account register user new 3 day\r\nexport const GetAccountNewStart = () => ({\r\n  type: types.GET_ACCOUNT_NEW_START,\r\n});\r\nexport const GetAccountNewSuccess = (token) => ({\r\n  type: types.GET_ACCOUNT_NEW_SUCCESS,\r\n  payload: token,\r\n});\r\nexport const GetAccountNewFail = (error) => ({\r\n  type: types.GET_ACCOUNT_NEW_FAIL,\r\n  payload: error,\r\n});\r\n//!Register\r\nexport const RegisterInitiate = (\r\n  email,\r\n  hoten,\r\n  username,\r\n  password,\r\n  ngaysinh,\r\n  gioitinh,\r\n  dienthoai\r\n) => {\r\n  return async function (dispatch) {\r\n    dispatch(RegisterStart());\r\n    await axios\r\n      .post(\"/admin/register\", {\r\n        email,\r\n        hoten,\r\n        username,\r\n        password,\r\n        ngaysinh,\r\n        gioitinh,\r\n        dienthoai,\r\n      })\r\n      .then((user) => {\r\n        dispatch(RegisterSuccess(user.data));\r\n      })\r\n      .catch((error) => {\r\n        dispatch(RegisterFail(toast.error(error.data)));\r\n      });\r\n  };\r\n};\r\n//!Login\r\nexport const loginInitiate = (email, password) => {\r\n  return async function (dispatch) {\r\n    dispatch(LoginStart());\r\n    await axios\r\n      .post(\"/admin/login\", { email, password })\r\n      .then((user) => {\r\n        dispatch(LoginSuccess(user.data));\r\n      })\r\n      .catch((error) => {\r\n        dispatch(LoginFail(toast.error(error.data)));\r\n      });\r\n  };\r\n};\r\n//!Logout\r\nexport const LogoutInitiate = () => {\r\n  return async function (dispatch) {\r\n    dispatch(LogoutStart());\r\n    await axios\r\n      .get(\"/admin/logout\")\r\n      .then((user) => {\r\n        dispatch(\r\n          LogoutSuccess(\r\n            user,\r\n            toast.success(\"Logout Success Thank You!\"),\r\n            localStorage.removeItem(\"firstLogin\"),\r\n            (window.location.href = \"/login\")\r\n          )\r\n        );\r\n      })\r\n      .catch((error) => {\r\n        dispatch(LoginFail(error));\r\n      });\r\n  };\r\n};\r\n\r\n//!Forget Admin\r\nexport const ForgetAdminInitiate = (email) => {\r\n  return async function (dispatch) {\r\n    dispatch(ForgetStart());\r\n    await axios\r\n      .post(\"/admin/forgotPassword\", { email })\r\n      .then((user) => {\r\n        dispatch(ForgetSuccess(user.data));\r\n      })\r\n      .catch((error) => {\r\n        dispatch(ForgetFail(error.data));\r\n      });\r\n  };\r\n};\r\n\r\n//!Refresh_token\r\nexport const RefreshTokenInitiate = (token) => {\r\n  return async function (dispatch) {\r\n    dispatch(RefreshTokenStart());\r\n    await axios\r\n      .get(\"/admin/refreshToken\", {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((user) => {\r\n        dispatch(RefreshTokenSuccess(user.data));\r\n      })\r\n      .catch((error) => {\r\n        dispatch(RefreshTokenFail(error.data));\r\n      });\r\n  };\r\n};\r\n//!InfoAdmin\r\nexport const InfoAdminInitiate = (token) => {\r\n  return async function (dispatch) {\r\n    dispatch(InfoAdminStart());\r\n    await axios\r\n      .get(\"/admin/profile\", {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((user) => {\r\n        dispatch(InfoAdminSuccess(user.data));\r\n      })\r\n      .catch((error) => {\r\n        dispatch(InfoAdminFail(error.data));\r\n      });\r\n  };\r\n};\r\n//!ChangePassword\r\nexport const ChangeAdminInitiate = (token, { ...state }) => {\r\n  return async function (dispatch) {\r\n    dispatch(ChangePasswordAdminStart());\r\n    await axios\r\n      .patch(\r\n        \"/admin/changePassword\",\r\n        { ...state },\r\n        {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        }\r\n      )\r\n      .then((user) => {\r\n        dispatch(\r\n          ChangePasswordAdminSuccess(user.data),\r\n          swal(\"Change password successfully ðŸ¤©\", {\r\n            icon: \"success\",\r\n          })\r\n        );\r\n      })\r\n      .catch((error) => {\r\n        dispatch(ChangePasswordAdminFail(error.data));\r\n      });\r\n  };\r\n};\r\n//!Get All User\r\nexport const GetAllUserInitiate = (token) => {\r\n  return async function (dispatch) {\r\n    dispatch(GetAllUserStart());\r\n    await axios\r\n      .get(\"/admin/customerAccount\", {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((user) => {\r\n        dispatch(GetAllUserSuccess(user.data));\r\n      })\r\n      .catch((error) => {\r\n        dispatch(GetAllUserFail(error.data));\r\n      });\r\n  };\r\n};\r\n//!Get All Admin\r\nexport const GetAllAdminInitiate = (token) => {\r\n  return async function (dispatch) {\r\n    dispatch(GetAllAdminStart());\r\n    await axios\r\n      .get(\"/admin/adminAccount\", {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((user) => {\r\n        dispatch(GetAllAdminSuccess(user.data));\r\n      })\r\n      .catch((error) => {\r\n        dispatch(GetAllAdminFail(error.data));\r\n      });\r\n  };\r\n};\r\n//!Account register user new 3 day\r\nexport const GetAccountNewInitiate = (token) => {\r\n  return async function (dispatch) {\r\n    dispatch(GetAccountNewStart());\r\n    await axios\r\n      .get(\"/admin/newUser\", {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((user) => {\r\n        dispatch(GetAccountNewSuccess(user.data));\r\n      })\r\n      .catch((error) => {\r\n        dispatch(GetAccountNewFail(error.data));\r\n      });\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}