{"ast":null,"code":"// import React, { useState, useEffect, useContext } from \"react\";\n// import { userRows } from \"../../utils/DataChart\";\n// import { AiFillDelete } from \"../../Imports/Icons\";\n// import { DataGrid } from \"@material-ui/data-grid\";\n// import { Link } from \"react-router-dom\";\n// import { UserLists } from \"../../Styles/StylePages/Admin/UserLists\";\n// import { useDispatch, useSelector } from \"react-redux\";\n// import moment from \"moment\";\n// import \"moment/locale/vi\";\n// import { GlobalState } from \"../../Contexts/GlobalState\";\n// import axios from \"axios\";\n// import swal from \"sweetalert\";\n// const UserList = () => {\n//   const [data, setData] = useState(userRows);\n//   const state = useContext(GlobalState);\n//   const { token } = useSelector((state) => state.authAdmin);\n//   const [callback, setCallback] = state.callback;\n//   const [loading, setLoading] = useState(false);\n//   const handleDelete = async (id) => {\n//     try {\n//       if (window.confirm(\"Are you sure you want to delete ðŸ¥²!!\")) {\n//         setLoading(true);\n//         const deleteProduct = axios.delete(`/admin/users/delete/${id}`, {\n//           headers: { Authorization: `Bearer ${token.accessToken}` },\n//         });\n//         await deleteProduct;\n//         setCallback(!callback);\n//         swal(\"delete product successfully ðŸ¤©\", {\n//           icon: \"success\",\n//         });\n//         setLoading(false);\n//       }\n//     } catch (err) {\n//       alert(err.response.data.msg);\n//     }\n//   };\n//   const { allUser } = useSelector((state) => state.authAdmin);\n//   const allUsers = allUser.data;\n//   const img =\n//     \"https://png.pngtree.com/png-clipart/20190924/original/pngtree-businessman-user-avatar-free-vector-png-image_4827807.jpg\";\n//   const columns = [\n//     { field: \"id\", headerName: \"ID\", width: 90 },\n//     {\n//       field: \"hoten\",\n//       headerName: \"DisplayName and Image\",\n//       width: 250,\n//       renderCell: (params) => {\n//         return (\n//           <div className=\"userListUser\">\n//             <img\n//               className=\"userListImg\"\n//               src={img || params.row.avatar}\n//               alt=\"\"\n//             />\n//             {params.row.hoten}\n//           </div>\n//         );\n//       },\n//     },\n//     {\n//       field: \"username\",\n//       headerName: \"UserName\",\n//       width: 200,\n//       renderCell: (params) => {\n//         return <div className=\"userListUser\">{params.row.username}</div>;\n//       },\n//     },\n//     { field: \"email\", headerName: \"Email\", width: 250 },\n//     {\n//       field: \"gioitinh\",\n//       headerName: \"Sex\",\n//       width: 120,\n//       renderCell: (params) => {\n//         return (\n//           <div className=\"userListUser\">\n//             {(params.row.gioitinh === 1 && \"Nam\") ||\n//               (params.row.gioitinh === 0 && \"Ná»¯\")}\n//           </div>\n//         );\n//       },\n//     },\n//     {\n//       field: \"ngaysinh\",\n//       headerName: \"Date\",\n//       width: 160,\n//       renderCell: (params) => {\n//         console.log(params);\n//         return (\n//           <div className=\"userListUser\">\n//             {moment(`${params.row.ngaysinh}`).format(\"Do MMM YYYY\")}\n//           </div>\n//         );\n//       },\n//     },\n//     {\n//       field: \"dienthoai\",\n//       headerName: \"Phone\",\n//       width: 180,\n//       renderCell: (params) => {\n//         return <div className=\"userListUser\">{params.row.dienthoai}</div>;\n//       },\n//     },\n//     {\n//       field: \"createdAt\",\n//       headerName: \"Date Create\",\n//       width: 160,\n//       renderCell: (params) => {\n//         console.log(params);\n//         return (\n//           <div className=\"userListUser\">\n//             {moment(`${params.row.createdAt}`).format(\"Do MMM YYYY\")}\n//           </div>\n//         );\n//       },\n//     },\n//     {\n//       field: \"updatedAt\",\n//       headerName: \"Date UpdateAt\",\n//       width: 170,\n//       renderCell: (params) => {\n//         console.log(params);\n//         return (\n//           <div className=\"userListUser\">\n//             {moment(`${params.row.updatedAt}`).format(\"Do MMM YYYY\")}\n//           </div>\n//         );\n//       },\n//     },\n//     {\n//       field: \"action\",\n//       headerName: \"Action\",\n//       width: 150,\n//       renderCell: (params) => {\n//         return (\n//           <>\n//             <Link to={\"/newUser/\" + params.row.id}>\n//               <button className=\"userListEdit\">Edit</button>\n//             </Link>\n//             <AiFillDelete\n//               className=\"userListDelete\"\n//               onClick={() => handleDelete(params.row.id)}\n//             />\n//           </>\n//         );\n//       },\n//     },\n//   ];\n//   return (\n//     <>\n//       <UserLists />\n//       <div className=\"userList\">\n//         <DataGrid\n//           // getRowId={(r) => r.id}\n//           rows={allUsers}\n//           disableSelectionOnClick\n//           columns={columns}\n//           pageSize={8}\n//           checkboxSelection\n//         />\n//       </div>\n//     </>\n//   );\n// };\n// export default UserList;","map":{"version":3,"sources":["D:/Full-Stack-Developer/Build-Web-Orther-Food-Full-Stack-Widosoft/client/src/Components/AdminComponent/UserList.js"],"names":[],"mappingssourcesContent":["// import React, { useState, useEffect, useContext } from \"react\";\r\n// import { userRows } from \"../../utils/DataChart\";\r\n// import { AiFillDelete } from \"../../Imports/Icons\";\r\n// import { DataGrid } from \"@material-ui/data-grid\";\r\n// import { Link } from \"react-router-dom\";\r\n// import { UserLists } from \"../../Styles/StylePages/Admin/UserLists\";\r\n// import { useDispatch, useSelector } from \"react-redux\";\r\n// import moment from \"moment\";\r\n// import \"moment/locale/vi\";\r\n// import { GlobalState } from \"../../Contexts/GlobalState\";\r\n// import axios from \"axios\";\r\n// import swal from \"sweetalert\";\r\n// const UserList = () => {\r\n//   const [data, setData] = useState(userRows);\r\n//   const state = useContext(GlobalState);\r\n//   const { token } = useSelector((state) => state.authAdmin);\r\n//   const [callback, setCallback] = state.callback;\r\n//   const [loading, setLoading] = useState(false);\r\n//   const handleDelete = async (id) => {\r\n//     try {\r\n//       if (window.confirm(\"Are you sure you want to delete ðŸ¥²!!\")) {\r\n//         setLoading(true);\r\n//         const deleteProduct = axios.delete(`/admin/users/delete/${id}`, {\r\n//           headers: { Authorization: `Bearer ${token.accessToken}` },\r\n//         });\r\n\r\n//         await deleteProduct;\r\n//         setCallback(!callback);\r\n//         swal(\"delete product successfully ðŸ¤©\", {\r\n//           icon: \"success\",\r\n//         });\r\n//         setLoading(false);\r\n//       }\r\n//     } catch (err) {\r\n//       alert(err.response.data.msg);\r\n//     }\r\n//   };\r\n\r\n//   const { allUser } = useSelector((state) => state.authAdmin);\r\n//   const allUsers = allUser.data;\r\n//   const img =\r\n//     \"https://png.pngtree.com/png-clipart/20190924/original/pngtree-businessman-user-avatar-free-vector-png-image_4827807.jpg\";\r\n//   const columns = [\r\n//     { field: \"id\", headerName: \"ID\", width: 90 },\r\n//     {\r\n//       field: \"hoten\",\r\n//       headerName: \"DisplayName and Image\",\r\n//       width: 250,\r\n//       renderCell: (params) => {\r\n//         return (\r\n//           <div className=\"userListUser\">\r\n//             <img\r\n//               className=\"userListImg\"\r\n//               src={img || params.row.avatar}\r\n//               alt=\"\"\r\n//             />\r\n//             {params.row.hoten}\r\n//           </div>\r\n//         );\r\n//       },\r\n//     },\r\n//     {\r\n//       field: \"username\",\r\n//       headerName: \"UserName\",\r\n//       width: 200,\r\n//       renderCell: (params) => {\r\n//         return <div className=\"userListUser\">{params.row.username}</div>;\r\n//       },\r\n//     },\r\n//     { field: \"email\", headerName: \"Email\", width: 250 },\r\n//     {\r\n//       field: \"gioitinh\",\r\n//       headerName: \"Sex\",\r\n//       width: 120,\r\n//       renderCell: (params) => {\r\n//         return (\r\n//           <div className=\"userListUser\">\r\n//             {(params.row.gioitinh === 1 && \"Nam\") ||\r\n//               (params.row.gioitinh === 0 && \"Ná»¯\")}\r\n//           </div>\r\n//         );\r\n//       },\r\n//     },\r\n//     {\r\n//       field: \"ngaysinh\",\r\n//       headerName: \"Date\",\r\n//       width: 160,\r\n//       renderCell: (params) => {\r\n//         console.log(params);\r\n//         return (\r\n//           <div className=\"userListUser\">\r\n//             {moment(`${params.row.ngaysinh}`).format(\"Do MMM YYYY\")}\r\n//           </div>\r\n//         );\r\n//       },\r\n//     },\r\n//     {\r\n//       field: \"dienthoai\",\r\n//       headerName: \"Phone\",\r\n//       width: 180,\r\n//       renderCell: (params) => {\r\n//         return <div className=\"userListUser\">{params.row.dienthoai}</div>;\r\n//       },\r\n//     },\r\n//     {\r\n//       field: \"createdAt\",\r\n//       headerName: \"Date Create\",\r\n//       width: 160,\r\n//       renderCell: (params) => {\r\n//         console.log(params);\r\n//         return (\r\n//           <div className=\"userListUser\">\r\n//             {moment(`${params.row.createdAt}`).format(\"Do MMM YYYY\")}\r\n//           </div>\r\n//         );\r\n//       },\r\n//     },\r\n//     {\r\n//       field: \"updatedAt\",\r\n//       headerName: \"Date UpdateAt\",\r\n//       width: 170,\r\n//       renderCell: (params) => {\r\n//         console.log(params);\r\n//         return (\r\n//           <div className=\"userListUser\">\r\n//             {moment(`${params.row.updatedAt}`).format(\"Do MMM YYYY\")}\r\n//           </div>\r\n//         );\r\n//       },\r\n//     },\r\n\r\n//     {\r\n//       field: \"action\",\r\n//       headerName: \"Action\",\r\n//       width: 150,\r\n//       renderCell: (params) => {\r\n//         return (\r\n//           <>\r\n//             <Link to={\"/newUser/\" + params.row.id}>\r\n//               <button className=\"userListEdit\">Edit</button>\r\n//             </Link>\r\n//             <AiFillDelete\r\n//               className=\"userListDelete\"\r\n//               onClick={() => handleDelete(params.row.id)}\r\n//             />\r\n//           </>\r\n//         );\r\n//       },\r\n//     },\r\n//   ];\r\n//   return (\r\n//     <>\r\n//       <UserLists />\r\n//       <div className=\"userList\">\r\n//         <DataGrid\r\n//           // getRowId={(r) => r.id}\r\n//           rows={allUsers}\r\n//           disableSelectionOnClick\r\n//           columns={columns}\r\n//           pageSize={8}\r\n//           checkboxSelection\r\n//         />\r\n//       </div>\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// export default UserList;\r\n"]},"metadata":{},"sourceType":"module"}