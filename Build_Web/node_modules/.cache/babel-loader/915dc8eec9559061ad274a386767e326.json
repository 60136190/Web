{"ast":null,"code":"import * as types from \"../ActionTypes\";\nconst initialState = {\n  loading: false,\n  error: null,\n  product: []\n};\n\nconst ProductReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case types.GET_ALL_PRODUCT_START:\n      return { ...state,\n        loading: true\n      };\n\n    case types.GET_ALL_PRODUCT_SUCCESS:\n      return { ...state,\n        loading: false,\n        product: action.payload.data\n      };\n\n    case types.GET_ALL_PRODUCT_FAIL:\n      return { ...state,\n        loading: false,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\n_c = ProductReducer;\nexport default ProductReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductReducer\");","map":{"version":3,"sources":["D:/Full-Stack-Developer/Build-Web-Orther-Food-Full-Stack-Widosoft/client/src/redux/Reducer/ReducerProduct.js"],"names":["types","initialState","loading","error","product","ProductReducer","state","action","type","GET_ALL_PRODUCT_START","GET_ALL_PRODUCT_SUCCESS","payload","data","GET_ALL_PRODUCT_FAIL"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,gBAAvB;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,KADU;AAEnBC,EAAAA,KAAK,EAAE,IAFY;AAGnBC,EAAAA,OAAO,EAAE;AAHU,CAArB;;AAKA,MAAMC,cAAc,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBL,YAAyB;AAAA,MAAXM,MAAW;;AACvD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKR,KAAK,CAACS,qBAAX;AACE,aAAO,EACL,GAAGH,KADE;AAELJ,QAAAA,OAAO,EAAE;AAFJ,OAAP;;AAKF,SAAKF,KAAK,CAACU,uBAAX;AACE,aAAO,EACL,GAAGJ,KADE;AAELJ,QAAAA,OAAO,EAAE,KAFJ;AAGLE,QAAAA,OAAO,EAAEG,MAAM,CAACI,OAAP,CAAeC;AAHnB,OAAP;;AAMF,SAAKZ,KAAK,CAACa,oBAAX;AACE,aAAO,EACL,GAAGP,KADE;AAELJ,QAAAA,OAAO,EAAE,KAFJ;AAGLC,QAAAA,KAAK,EAAEI,MAAM,CAACI;AAHT,OAAP;;AAKF;AACE,aAAOL,KAAP;AArBJ;AAuBD,CAxBD;;KAAMD,c;AAyBN,eAAeA,cAAf","sourcesContent":["import * as types from \"../ActionTypes\";\r\nconst initialState = {\r\n  loading: false,\r\n  error: null,\r\n  product: [],\r\n};\r\nconst ProductReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.GET_ALL_PRODUCT_START:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n\r\n    case types.GET_ALL_PRODUCT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        product: action.payload.data,\r\n      };\r\n\r\n    case types.GET_ALL_PRODUCT_FAIL:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default ProductReducer;\r\n"]},"metadata":{},"sourceType":"module"}