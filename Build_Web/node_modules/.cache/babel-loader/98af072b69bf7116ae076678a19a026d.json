{"ast":null,"code":"var _jsxFileName = \"D:\\\\Full-Stack-Developer\\\\Build-Web-Orther-Food-Full-Stack-Widosoft\\\\client\\\\src\\\\Components\\\\UserRoute\\\\LoadingToRedirect.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport Loading from \"../Loading/Loading\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoadingToRedirect = () => {\n  _s();\n\n  const [count, setCount] = useState(2);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCount(currentCount => --currentCount);\n    }, 1000);\n    count === 0 && navigate(\"/login\");\n    count === 0 && toast.warning(\"Please Login when you to the website\");\n    return () => clearInterval(interval);\n  }, [count, navigate]);\n  return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 10\n  }, this);\n};\n\n_s(LoadingToRedirect, \"iEI25SFvzWllsMWh/8yMEaJ6qgM=\", false, function () {\n  return [useNavigate];\n});\n\n_c = LoadingToRedirect;\nexport default LoadingToRedirect;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoadingToRedirect\");","map":{"version":3,"sources":["D:/Full-Stack-Developer/Build-Web-Orther-Food-Full-Stack-Widosoft/client/src/Components/UserRoute/LoadingToRedirect.js"],"names":["React","useState","useEffect","useNavigate","toast","Loading","LoadingToRedirect","count","setCount","navigate","interval","setInterval","currentCount","warning","clearInterval"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAOC,OAAP,MAAoB,oBAApB;;;AACA,MAAMC,iBAAiB,GAAG,MAAM;AAAA;;AAC9B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAMQ,QAAQ,GAAGN,WAAW,EAA5B;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMQ,QAAQ,GAAGC,WAAW,CAAC,MAAM;AACjCH,MAAAA,QAAQ,CAAEI,YAAD,IAAkB,EAAEA,YAArB,CAAR;AACD,KAF2B,EAEzB,IAFyB,CAA5B;AAIAL,IAAAA,KAAK,KAAK,CAAV,IAAeE,QAAQ,CAAC,QAAD,CAAvB;AACAF,IAAAA,KAAK,KAAK,CAAV,IAAeH,KAAK,CAACS,OAAN,CAAc,sCAAd,CAAf;AACA,WAAO,MAAMC,aAAa,CAACJ,QAAD,CAA1B;AACD,GARQ,EAQN,CAACH,KAAD,EAAQE,QAAR,CARM,CAAT;AASA,sBAAO,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAbD;;GAAMH,iB;UAEaH,W;;;KAFbG,iB;AAeN,eAAeA,iBAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport Loading from \"../Loading/Loading\";\r\nconst LoadingToRedirect = () => {\r\n  const [count, setCount] = useState(2);\r\n  const navigate = useNavigate();\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setCount((currentCount) => --currentCount);\r\n    }, 1000);\r\n\r\n    count === 0 && navigate(\"/login\");\r\n    count === 0 && toast.warning(\"Please Login when you to the website\");\r\n    return () => clearInterval(interval);\r\n  }, [count, navigate]);\r\n  return <Loading />;\r\n};\r\n\r\nexport default LoadingToRedirect;\r\n"]},"metadata":{},"sourceType":"module"}