{"ast":null,"code":"import * as types from \"../ActionTypes\";\nconst initialState = {\n  loading: false,\n  error: null,\n  token: [],\n  Admin: [],\n  AdminRegister: [],\n  isLogout: false,\n  InfoAdmin: [],\n  changePassword: [],\n  allUser: [],\n  allUsers: [],\n  uploadImg: [],\n  allAdmins: [],\n  forget: [],\n  newAccount: []\n};\n\nconst AuthReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case types.LOGIN_API_START:\n    case types.REGISTER_API_START:\n    case types.LOGOUT_API_START:\n    case types.REFRESH_TOKEN_ADMIN_START:\n    case types.ACCEPT_TOKEN_GET_ADMIN_START:\n    case types.CHANGE_ADMIN_PASSWORD_START:\n    case types.GET_ALL_USER_START:\n    case types.GET_ALL_ADMIN_START:\n    case types.FORGET_ADMIN_START:\n    case types.GET_ACCOUNT_NEW_START:\n      return { ...state,\n        loading: true\n      };\n\n    case types.LOGIN_API_SUCCESS:\n      return { ...state,\n        loading: false,\n        Admin: action.payload\n      };\n\n    case types.REGISTER_API_SUCCESS:\n      return { ...state,\n        loading: false,\n        AdminRegister: action.payload\n      };\n\n    case types.REFRESH_TOKEN_ADMIN_SUCCESS:\n      return { ...state,\n        loading: false,\n        token: action.payload\n      };\n\n    case types.ACCEPT_TOKEN_GET_ADMIN_SUCCESS:\n      return { ...state,\n        isLogout: true,\n        loading: false,\n        InfoAdmin: action.payload.data[0]\n      };\n\n    case types.CHANGE_ADMIN_PASSWORD_SUCCESS:\n      return { ...state,\n        loading: false,\n        changePassword: action.payload\n      };\n\n    case types.LOGOUT_API_SUCCESS:\n      return { ...state,\n        loading: false,\n        isLogout: false\n      };\n\n    case types.GET_ALL_USER_SUCCESS:\n      return { ...state,\n        loading: false,\n        allUser: action.payload,\n        allUsers: action.payload.data\n      };\n\n    case types.GET_ALL_ADMIN_SUCCESS:\n      return { ...state,\n        loading: false,\n        allAdmins: action.payload.data\n      };\n\n    case types.FORGET_ADMIN_SUCCESS:\n      return { ...state,\n        loading: false,\n        forget: action.payload\n      };\n\n    case types.GET_ACCOUNT_NEW_SUCCESS:\n      return { ...state,\n        loading: false,\n        newAccount: action.payload\n      };\n\n    case types.CLEAR_ERRORS_SUCCESS:\n      return { ...state,\n        error: null,\n        changePassword: []\n      };\n\n    case types.LOGIN_API_FAIL:\n    case types.REGISTER_API_FAIL:\n    case types.LOGIN_API_FAIL:\n    case types.CHANGE_ADMIN_PASSWORD_FAIL:\n    case types.REFRESH_TOKEN_ADMIN_FAIL:\n    case types.ACCEPT_TOKEN_GET_ADMIN_FAIL:\n    case types.GET_ALL_USER_FAIL:\n    case types.GET_ALL_ADMIN_FAIL:\n    case types.FORGET_ADMIN_FAIL:\n    case types.GET_ACCOUNT_NEW_FAIL:\n      return { ...state,\n        loading: false,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\n_c = AuthReducer;\nexport default AuthReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthReducer\");","map":{"version":3,"sources":["D:/Full-Stack-Developer/Build-Web-Orther-Food-Full-Stack-Widosoft/client/src/redux/Reducer/ReducerAdmin.js"],"names":["types","initialState","loading","error","token","Admin","AdminRegister","isLogout","InfoAdmin","changePassword","allUser","allUsers","uploadImg","allAdmins","forget","newAccount","AuthReducer","state","action","type","LOGIN_API_START","REGISTER_API_START","LOGOUT_API_START","REFRESH_TOKEN_ADMIN_START","ACCEPT_TOKEN_GET_ADMIN_START","CHANGE_ADMIN_PASSWORD_START","GET_ALL_USER_START","GET_ALL_ADMIN_START","FORGET_ADMIN_START","GET_ACCOUNT_NEW_START","LOGIN_API_SUCCESS","payload","REGISTER_API_SUCCESS","REFRESH_TOKEN_ADMIN_SUCCESS","ACCEPT_TOKEN_GET_ADMIN_SUCCESS","data","CHANGE_ADMIN_PASSWORD_SUCCESS","LOGOUT_API_SUCCESS","GET_ALL_USER_SUCCESS","GET_ALL_ADMIN_SUCCESS","FORGET_ADMIN_SUCCESS","GET_ACCOUNT_NEW_SUCCESS","CLEAR_ERRORS_SUCCESS","LOGIN_API_FAIL","REGISTER_API_FAIL","CHANGE_ADMIN_PASSWORD_FAIL","REFRESH_TOKEN_ADMIN_FAIL","ACCEPT_TOKEN_GET_ADMIN_FAIL","GET_ALL_USER_FAIL","GET_ALL_ADMIN_FAIL","FORGET_ADMIN_FAIL","GET_ACCOUNT_NEW_FAIL"],"mappings":"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","sourcesContent":["import * as types from \"../ActionTypes\";\r\nconst initialState = {\r\n  loading: false,\r\n  error: null,\r\n  token: [],\r\n  Admin: [],\r\n  AdminRegister: [],\r\n  isLogout: false,\r\n  InfoAdmin: [],\r\n  changePassword: [],\r\n  allUser: [],\r\n  allUsers: [],\r\n  uploadImg: [],\r\n  allAdmins: [],\r\n  forget: [],\r\n  newAccount: [],\r\n};\r\nconst AuthReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.LOGIN_API_START:\r\n    case types.REGISTER_API_START:\r\n    case types.LOGOUT_API_START:\r\n    case types.REFRESH_TOKEN_ADMIN_START:\r\n    case types.ACCEPT_TOKEN_GET_ADMIN_START:\r\n    case types.CHANGE_ADMIN_PASSWORD_START:\r\n    case types.GET_ALL_USER_START:\r\n    case types.GET_ALL_ADMIN_START:\r\n    case types.FORGET_ADMIN_START:\r\n    case types.GET_ACCOUNT_NEW_START:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n\r\n    case types.LOGIN_API_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        Admin: action.payload,\r\n      };\r\n    case types.REGISTER_API_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        AdminRegister: action.payload,\r\n      };\r\n    case types.REFRESH_TOKEN_ADMIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        token: action.payload,\r\n      };\r\n    case types.ACCEPT_TOKEN_GET_ADMIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLogout: true,\r\n        loading: false,\r\n        InfoAdmin: action.payload.data[0],\r\n      };\r\n    case types.CHANGE_ADMIN_PASSWORD_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        changePassword: action.payload,\r\n      };\r\n    case types.LOGOUT_API_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        isLogout: false,\r\n      };\r\n    case types.GET_ALL_USER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        allUser: action.payload,\r\n        allUsers: action.payload.data,\r\n      };\r\n    case types.GET_ALL_ADMIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        allAdmins: action.payload.data,\r\n      };\r\n    case types.FORGET_ADMIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        forget: action.payload,\r\n      };\r\n    case types.GET_ACCOUNT_NEW_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        newAccount: action.payload,\r\n      };\r\n    case types.CLEAR_ERRORS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        changePassword: [],\r\n      };\r\n    case types.LOGIN_API_FAIL:\r\n    case types.REGISTER_API_FAIL:\r\n    case types.LOGIN_API_FAIL:\r\n    case types.CHANGE_ADMIN_PASSWORD_FAIL:\r\n    case types.REFRESH_TOKEN_ADMIN_FAIL:\r\n    case types.ACCEPT_TOKEN_GET_ADMIN_FAIL:\r\n    case types.GET_ALL_USER_FAIL:\r\n    case types.GET_ALL_ADMIN_FAIL:\r\n    case types.FORGET_ADMIN_FAIL:\r\n    case types.GET_ACCOUNT_NEW_FAIL:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default AuthReducer;\r\n"]},"metadata":{},"sourceType":"module"}