{"ast":null,"code":"import axios from \"axios\";\nimport * as types from \"../ActionTypes\";\nimport { ToastContainer, toast } from \"react-toastify\"; //Register\n\nexport const RegisterStart = () => ({\n  type: types.REGISTER_API_START\n});\n_c = RegisterStart;\nexport const RegisterSuccess = api => ({\n  type: types.REGISTER_API_SUCCESS,\n  payload: api\n});\n_c2 = RegisterSuccess;\nexport const RegisterFail = error => ({\n  type: types.REGISTER_API_FAIL,\n  payload: error\n}); //Login\n\n_c3 = RegisterFail;\nexport const LoginStart = () => ({\n  type: types.LOGIN_API_START\n});\n_c4 = LoginStart;\nexport const LoginSuccess = api => ({\n  type: types.LOGIN_API_SUCCESS,\n  payload: api\n});\n_c5 = LoginSuccess;\nexport const LoginFail = error => ({\n  type: types.LOGIN_API_FAIL,\n  payload: error\n}); //Logout\n\n_c6 = LoginFail;\nexport const LogoutStart = () => ({\n  type: types.LOGOUT_API_START\n});\n_c7 = LogoutStart;\nexport const LogoutSuccess = () => ({\n  type: types.LOGOUT_API_SUCCESS\n});\n_c8 = LogoutSuccess;\nexport const LogoutFail = () => ({\n  type: types.LOGOUT_API_FAIL\n}); //Register\n\n_c9 = LogoutFail;\nexport const RegisterInitiate = (displayName, email, password, date, sex, phone) => {\n  return async function (dispatch) {\n    dispatch(RegisterStart());\n    await axios.post(\"/admin/register\", {\n      displayName,\n      email,\n      password,\n      date,\n      sex,\n      phone\n    }).then(_ref => {\n      let {\n        user\n      } = _ref;\n      dispatch(RegisterSuccess(user, toast.success(\"Register Success Thank You!\"), window.location.href = \"/admin\"));\n    }).catch(error => {\n      dispatch(RegisterFail(toast.error(error.response.data.msg)));\n    });\n  };\n};\n_c10 = RegisterInitiate;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10;\n\n$RefreshReg$(_c, \"RegisterStart\");\n$RefreshReg$(_c2, \"RegisterSuccess\");\n$RefreshReg$(_c3, \"RegisterFail\");\n$RefreshReg$(_c4, \"LoginStart\");\n$RefreshReg$(_c5, \"LoginSuccess\");\n$RefreshReg$(_c6, \"LoginFail\");\n$RefreshReg$(_c7, \"LogoutStart\");\n$RefreshReg$(_c8, \"LogoutSuccess\");\n$RefreshReg$(_c9, \"LogoutFail\");\n$RefreshReg$(_c10, \"RegisterInitiate\");","map":{"version":3,"sources":["D:/Full-Stack-Developer/Build-Web-Orther-Food-Full-Stack-Widosoft/client/src/redux/Action/ActionAdmin.js"],"names":["axios","types","ToastContainer","toast","RegisterStart","type","REGISTER_API_START","RegisterSuccess","api","REGISTER_API_SUCCESS","payload","RegisterFail","error","REGISTER_API_FAIL","LoginStart","LOGIN_API_START","LoginSuccess","LOGIN_API_SUCCESS","LoginFail","LOGIN_API_FAIL","LogoutStart","LOGOUT_API_START","LogoutSuccess","LOGOUT_API_SUCCESS","LogoutFail","LOGOUT_API_FAIL","RegisterInitiate","displayName","email","password","date","sex","phone","dispatch","post","then","user","success","window","location","href","catch","response","data","msg"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,KAAZ,MAAuB,gBAAvB;AACA,SAASC,cAAT,EAAyBC,KAAzB,QAAsC,gBAAtC,C,CAEA;;AACA,OAAO,MAAMC,aAAa,GAAG,OAAO;AAClCC,EAAAA,IAAI,EAAEJ,KAAK,CAACK;AADsB,CAAP,CAAtB;KAAMF,a;AAGb,OAAO,MAAMG,eAAe,GAAIC,GAAD,KAAU;AACvCH,EAAAA,IAAI,EAAEJ,KAAK,CAACQ,oBAD2B;AAEvCC,EAAAA,OAAO,EAAEF;AAF8B,CAAV,CAAxB;MAAMD,e;AAIb,OAAO,MAAMI,YAAY,GAAIC,KAAD,KAAY;AACtCP,EAAAA,IAAI,EAAEJ,KAAK,CAACY,iBAD0B;AAEtCH,EAAAA,OAAO,EAAEE;AAF6B,CAAZ,CAArB,C,CAIP;;MAJaD,Y;AAKb,OAAO,MAAMG,UAAU,GAAG,OAAO;AAC/BT,EAAAA,IAAI,EAAEJ,KAAK,CAACc;AADmB,CAAP,CAAnB;MAAMD,U;AAGb,OAAO,MAAME,YAAY,GAAIR,GAAD,KAAU;AACpCH,EAAAA,IAAI,EAAEJ,KAAK,CAACgB,iBADwB;AAEpCP,EAAAA,OAAO,EAAEF;AAF2B,CAAV,CAArB;MAAMQ,Y;AAIb,OAAO,MAAME,SAAS,GAAIN,KAAD,KAAY;AACnCP,EAAAA,IAAI,EAAEJ,KAAK,CAACkB,cADuB;AAEnCT,EAAAA,OAAO,EAAEE;AAF0B,CAAZ,CAAlB,C,CAIP;;MAJaM,S;AAKb,OAAO,MAAME,WAAW,GAAG,OAAO;AAChCf,EAAAA,IAAI,EAAEJ,KAAK,CAACoB;AADoB,CAAP,CAApB;MAAMD,W;AAGb,OAAO,MAAME,aAAa,GAAG,OAAO;AAClCjB,EAAAA,IAAI,EAAEJ,KAAK,CAACsB;AADsB,CAAP,CAAtB;MAAMD,a;AAGb,OAAO,MAAME,UAAU,GAAG,OAAO;AAC/BnB,EAAAA,IAAI,EAAEJ,KAAK,CAACwB;AADmB,CAAP,CAAnB,C,CAIP;;MAJaD,U;AAKb,OAAO,MAAME,gBAAgB,GAAG,CAC9BC,WAD8B,EAE9BC,KAF8B,EAG9BC,QAH8B,EAI9BC,IAJ8B,EAK9BC,GAL8B,EAM9BC,KAN8B,KAO3B;AACH,SAAO,gBAAgBC,QAAhB,EAA0B;AAC/BA,IAAAA,QAAQ,CAAC7B,aAAa,EAAd,CAAR;AACA,UAAMJ,KAAK,CACRkC,IADG,CACE,iBADF,EACqB;AACvBP,MAAAA,WADuB;AAEvBC,MAAAA,KAFuB;AAGvBC,MAAAA,QAHuB;AAIvBC,MAAAA,IAJuB;AAKvBC,MAAAA,GALuB;AAMvBC,MAAAA;AANuB,KADrB,EASHG,IATG,CASE,QAAc;AAAA,UAAb;AAAEC,QAAAA;AAAF,OAAa;AAClBH,MAAAA,QAAQ,CACN1B,eAAe,CACb6B,IADa,EAEbjC,KAAK,CAACkC,OAAN,CAAc,6BAAd,CAFa,EAGZC,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,QAHX,CADT,CAAR;AAOD,KAjBG,EAkBHC,KAlBG,CAkBI7B,KAAD,IAAW;AAChBqB,MAAAA,QAAQ,CAACtB,YAAY,CAACR,KAAK,CAACS,KAAN,CAAYA,KAAK,CAAC8B,QAAN,CAAeC,IAAf,CAAoBC,GAAhC,CAAD,CAAb,CAAR;AACD,KApBG,CAAN;AAqBD,GAvBD;AAwBD,CAhCM;OAAMlB,gB","sourcesContent":["import axios from \"axios\";\r\nimport * as types from \"../ActionTypes\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\n\r\n//Register\r\nexport const RegisterStart = () => ({\r\n  type: types.REGISTER_API_START,\r\n});\r\nexport const RegisterSuccess = (api) => ({\r\n  type: types.REGISTER_API_SUCCESS,\r\n  payload: api,\r\n});\r\nexport const RegisterFail = (error) => ({\r\n  type: types.REGISTER_API_FAIL,\r\n  payload: error,\r\n});\r\n//Login\r\nexport const LoginStart = () => ({\r\n  type: types.LOGIN_API_START,\r\n});\r\nexport const LoginSuccess = (api) => ({\r\n  type: types.LOGIN_API_SUCCESS,\r\n  payload: api,\r\n});\r\nexport const LoginFail = (error) => ({\r\n  type: types.LOGIN_API_FAIL,\r\n  payload: error,\r\n});\r\n//Logout\r\nexport const LogoutStart = () => ({\r\n  type: types.LOGOUT_API_START,\r\n});\r\nexport const LogoutSuccess = () => ({\r\n  type: types.LOGOUT_API_SUCCESS,\r\n});\r\nexport const LogoutFail = () => ({\r\n  type: types.LOGOUT_API_FAIL,\r\n});\r\n\r\n//Register\r\nexport const RegisterInitiate = (\r\n  displayName,\r\n  email,\r\n  password,\r\n  date,\r\n  sex,\r\n  phone\r\n) => {\r\n  return async function (dispatch) {\r\n    dispatch(RegisterStart());\r\n    await axios\r\n      .post(\"/admin/register\", {\r\n        displayName,\r\n        email,\r\n        password,\r\n        date,\r\n        sex,\r\n        phone,\r\n      })\r\n      .then(({ user }) => {\r\n        dispatch(\r\n          RegisterSuccess(\r\n            user,\r\n            toast.success(\"Register Success Thank You!\"),\r\n            (window.location.href = \"/admin\")\r\n          )\r\n        );\r\n      })\r\n      .catch((error) => {\r\n        dispatch(RegisterFail(toast.error(error.response.data.msg)));\r\n      });\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}