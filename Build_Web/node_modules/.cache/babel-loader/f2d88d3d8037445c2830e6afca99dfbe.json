{"ast":null,"code":"var _jsxFileName = \"D:\\\\Full-Stack-Developer\\\\Build-Web-Orther-Food-Full-Stack-Widosoft\\\\client\\\\src\\\\Components\\\\AdminComponent\\\\UserList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { userRows } from \"../../utils/DataChart\";\nimport { AiFillDelete } from \"../../Imports/Icons\";\nimport { DataGrid } from \"@material-ui/data-grid\";\nimport { Link } from \"react-router-dom\";\nimport { UserLists } from \"../../Styles/StylePages/Admin/UserLists\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport moment from \"moment\";\nimport \"moment/locale/vi\";\nimport { GlobalState } from \"../../Contexts/GlobalState\";\nimport axios from \"axios\";\nimport swal from \"sweetalert\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst UserList = () => {\n  _s();\n\n  const [data, setData] = useState(userRows);\n  const state = useContext(GlobalState);\n  const {\n    token\n  } = useSelector(state => state.authAdmin);\n  const [callback, setCallback] = state.callback;\n  const [loading, setLoading] = useState(false);\n\n  const handleDelete = async id => {\n    try {\n      if (window.confirm(\"Are you sure you want to delete ðŸ¥²!!\")) {\n        setLoading(true);\n        const deleteProduct = axios.delete(`/admin/users/delete/${id}`, {\n          headers: {\n            Authorization: `Bearer ${token.accessToken}`\n          }\n        });\n        await deleteProduct;\n        setCallback(!callback);\n        swal(\"delete product successfully ðŸ¤©\", {\n          icon: \"success\"\n        });\n        setLoading(false);\n      }\n    } catch (err) {\n      alert(err.response.data.msg);\n    }\n  };\n\n  const {\n    allUser\n  } = useSelector(state => state.authAdmin);\n  const allUsers = allUser.data;\n  const img = \"https://png.pngtree.com/png-clipart/20190924/original/pngtree-businessman-user-avatar-free-vector-png-image_4827807.jpg\";\n  const columns = [{\n    field: \"id\",\n    headerName: \"ID\",\n    width: 90\n  } //   {\n  //     field: \"hoten\",\n  //     headerName: \"DisplayName and Image\",\n  //     width: 250,\n  //     renderCell: (params) => {\n  //       return (\n  //         <div className=\"userListUser\">\n  //           <img\n  //             className=\"userListImg\"\n  //             src={img || params.row.avatar}\n  //             alt=\"\"\n  //           />\n  //           {params.row.hoten}\n  //         </div>\n  //       );\n  //     },\n  //   },\n  //   {\n  //     field: \"username\",\n  //     headerName: \"UserName\",\n  //     width: 200,\n  //     renderCell: (params) => {\n  //       return <div className=\"userListUser\">{params.row.username}</div>;\n  //     },\n  //   },\n  //   { field: \"email\", headerName: \"Email\", width: 250 },\n  //   {\n  //     field: \"gioitinh\",\n  //     headerName: \"Sex\",\n  //     width: 120,\n  //     renderCell: (params) => {\n  //       return (\n  //         <div className=\"userListUser\">\n  //           {(params.row.gioitinh === 1 && \"Nam\") ||\n  //             (params.row.gioitinh === 0 && \"Ná»¯\")}\n  //         </div>\n  //       );\n  //     },\n  //   },\n  //   {\n  //     field: \"ngaysinh\",\n  //     headerName: \"Date\",\n  //     width: 160,\n  //     renderCell: (params) => {\n  //       console.log(params);\n  //       return (\n  //         <div className=\"userListUser\">\n  //           {moment(`${params.row.ngaysinh}`).format(\"Do MMM YYYY\")}\n  //         </div>\n  //       );\n  //     },\n  //   },\n  //   {\n  //     field: \"dienthoai\",\n  //     headerName: \"Phone\",\n  //     width: 180,\n  //     renderCell: (params) => {\n  //       return <div className=\"userListUser\">{params.row.dienthoai}</div>;\n  //     },\n  //   },\n  //   {\n  //     field: \"createdAt\",\n  //     headerName: \"Date Create\",\n  //     width: 160,\n  //     renderCell: (params) => {\n  //       console.log(params);\n  //       return (\n  //         <div className=\"userListUser\">\n  //           {moment(`${params.row.createdAt}`).format(\"Do MMM YYYY\")}\n  //         </div>\n  //       );\n  //     },\n  //   },\n  //   {\n  //     field: \"updatedAt\",\n  //     headerName: \"Date UpdateAt\",\n  //     width: 170,\n  //     renderCell: (params) => {\n  //       console.log(params);\n  //       return (\n  //         <div className=\"userListUser\">\n  //           {moment(`${params.row.updatedAt}`).format(\"Do MMM YYYY\")}\n  //         </div>\n  //       );\n  //     },\n  //   },\n  //   {\n  //     field: \"action\",\n  //     headerName: \"Action\",\n  //     width: 150,\n  //     renderCell: (params) => {\n  //       return (\n  //         <>\n  //           <Link to={\"/newUser/\" + params.row.id}>\n  //             <button className=\"userListEdit\">Edit</button>\n  //           </Link>\n  //           <AiFillDelete\n  //             className=\"userListDelete\"\n  //             onClick={() => handleDelete(params.row.id)}\n  //           />\n  //         </>\n  //       );\n  //     },\n  //   },\n  ];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(UserLists, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"userList\",\n      children: /*#__PURE__*/_jsxDEV(DataGrid, {\n        getRowId: r => r.id,\n        rows: allUsers,\n        disableSelectionOnClick: true,\n        columns: columns,\n        pageSize: 8,\n        checkboxSelection: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(UserList, \"rcGr0o8iEXR6RXXihsNio2gkiwY=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c = UserList;\nexport default UserList;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserList\");","map":{"version":3,"sources":["D:/Full-Stack-Developer/Build-Web-Orther-Food-Full-Stack-Widosoft/client/src/Components/AdminComponent/UserList.js"],"names":["React","useState","useEffect","useContext","userRows","AiFillDelete","DataGrid","Link","UserLists","useDispatch","useSelector","moment","GlobalState","axios","swal","UserList","data","setData","state","token","authAdmin","callback","setCallback","loading","setLoading","handleDelete","id","window","confirm","deleteProduct","delete","headers","Authorization","accessToken","icon","err","alert","response","msg","allUser","allUsers","img","columns","field","headerName","width","r"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,SAASC,QAAT,QAAyB,uBAAzB;AACA,SAASC,YAAT,QAA6B,qBAA7B;AACA,SAASC,QAAT,QAAyB,wBAAzB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,SAAT,QAA0B,yCAA1B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAO,kBAAP;AACA,SAASC,WAAT,QAA4B,4BAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,YAAjB;;;;AACA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBhB,QAAQ,CAACG,QAAD,CAAhC;AACA,QAAMc,KAAK,GAAGf,UAAU,CAACS,WAAD,CAAxB;AACA,QAAM;AAAEO,IAAAA;AAAF,MAAYT,WAAW,CAAEQ,KAAD,IAAWA,KAAK,CAACE,SAAlB,CAA7B;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BJ,KAAK,CAACG,QAAtC;AACA,QAAM,CAACE,OAAD,EAAUC,UAAV,IAAwBvB,QAAQ,CAAC,KAAD,CAAtC;;AACA,QAAMwB,YAAY,GAAG,MAAOC,EAAP,IAAc;AACjC,QAAI;AACF,UAAIC,MAAM,CAACC,OAAP,CAAe,sCAAf,CAAJ,EAA4D;AAC1DJ,QAAAA,UAAU,CAAC,IAAD,CAAV;AACA,cAAMK,aAAa,GAAGhB,KAAK,CAACiB,MAAN,CAAc,uBAAsBJ,EAAG,EAAvC,EAA0C;AAC9DK,UAAAA,OAAO,EAAE;AAAEC,YAAAA,aAAa,EAAG,UAASb,KAAK,CAACc,WAAY;AAA7C;AADqD,SAA1C,CAAtB;AAIA,cAAMJ,aAAN;AACAP,QAAAA,WAAW,CAAC,CAACD,QAAF,CAAX;AACAP,QAAAA,IAAI,CAAC,gCAAD,EAAmC;AACrCoB,UAAAA,IAAI,EAAE;AAD+B,SAAnC,CAAJ;AAGAV,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD;AACF,KAdD,CAcE,OAAOW,GAAP,EAAY;AACZC,MAAAA,KAAK,CAACD,GAAG,CAACE,QAAJ,CAAarB,IAAb,CAAkBsB,GAAnB,CAAL;AACD;AACF,GAlBD;;AAoBA,QAAM;AAAEC,IAAAA;AAAF,MAAc7B,WAAW,CAAEQ,KAAD,IAAWA,KAAK,CAACE,SAAlB,CAA/B;AACA,QAAMoB,QAAQ,GAAGD,OAAO,CAACvB,IAAzB;AACA,QAAMyB,GAAG,GACP,yHADF;AAEA,QAAMC,OAAO,GAAG,CACd;AAAEC,IAAAA,KAAK,EAAE,IAAT;AAAeC,IAAAA,UAAU,EAAE,IAA3B;AAAiCC,IAAAA,KAAK,EAAE;AAAxC,GADc,CAEdc,GAAhB;AA4GA,sBACE;AAAA,4BACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,6BACE,QAAC,QAAD;AACE,QAAA,QAAQ,EAAGC,CAAD,IAAOA,CAAC,CAACpB,EADrB;AAEE,QAAA,IAAI,EAAEc,QAFR;AAGE,QAAA,uBAAuB,MAHzB;AAIE,QAAA,OAAO,EAAEE,OAJX;AAKE,QAAA,QAAQ,EAAE,CALZ;AAME,QAAA,iBAAiB;AANnB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAeD,CAzJD;;GAAM3B,Q;UAGcL,W,EAuBEA,W;;;KA1BhBK,Q;AA2JN,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport { userRows } from \"../../utils/DataChart\";\r\nimport { AiFillDelete } from \"../../Imports/Icons\";\r\nimport { DataGrid } from \"@material-ui/data-grid\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { UserLists } from \"../../Styles/StylePages/Admin/UserLists\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport moment from \"moment\";\r\nimport \"moment/locale/vi\";\r\nimport { GlobalState } from \"../../Contexts/GlobalState\";\r\nimport axios from \"axios\";\r\nimport swal from \"sweetalert\";\r\nconst UserList = () => {\r\n  const [data, setData] = useState(userRows);\r\n  const state = useContext(GlobalState);\r\n  const { token } = useSelector((state) => state.authAdmin);\r\n  const [callback, setCallback] = state.callback;\r\n  const [loading, setLoading] = useState(false);\r\n  const handleDelete = async (id) => {\r\n    try {\r\n      if (window.confirm(\"Are you sure you want to delete ðŸ¥²!!\")) {\r\n        setLoading(true);\r\n        const deleteProduct = axios.delete(`/admin/users/delete/${id}`, {\r\n          headers: { Authorization: `Bearer ${token.accessToken}` },\r\n        });\r\n\r\n        await deleteProduct;\r\n        setCallback(!callback);\r\n        swal(\"delete product successfully ðŸ¤©\", {\r\n          icon: \"success\",\r\n        });\r\n        setLoading(false);\r\n      }\r\n    } catch (err) {\r\n      alert(err.response.data.msg);\r\n    }\r\n  };\r\n\r\n  const { allUser } = useSelector((state) => state.authAdmin);\r\n  const allUsers = allUser.data;\r\n  const img =\r\n    \"https://png.pngtree.com/png-clipart/20190924/original/pngtree-businessman-user-avatar-free-vector-png-image_4827807.jpg\";\r\n  const columns = [\r\n    { field: \"id\", headerName: \"ID\", width: 90 },\r\n    //   {\r\n    //     field: \"hoten\",\r\n    //     headerName: \"DisplayName and Image\",\r\n    //     width: 250,\r\n    //     renderCell: (params) => {\r\n    //       return (\r\n    //         <div className=\"userListUser\">\r\n    //           <img\r\n    //             className=\"userListImg\"\r\n    //             src={img || params.row.avatar}\r\n    //             alt=\"\"\r\n    //           />\r\n    //           {params.row.hoten}\r\n    //         </div>\r\n    //       );\r\n    //     },\r\n    //   },\r\n    //   {\r\n    //     field: \"username\",\r\n    //     headerName: \"UserName\",\r\n    //     width: 200,\r\n    //     renderCell: (params) => {\r\n    //       return <div className=\"userListUser\">{params.row.username}</div>;\r\n    //     },\r\n    //   },\r\n    //   { field: \"email\", headerName: \"Email\", width: 250 },\r\n    //   {\r\n    //     field: \"gioitinh\",\r\n    //     headerName: \"Sex\",\r\n    //     width: 120,\r\n    //     renderCell: (params) => {\r\n    //       return (\r\n    //         <div className=\"userListUser\">\r\n    //           {(params.row.gioitinh === 1 && \"Nam\") ||\r\n    //             (params.row.gioitinh === 0 && \"Ná»¯\")}\r\n    //         </div>\r\n    //       );\r\n    //     },\r\n    //   },\r\n    //   {\r\n    //     field: \"ngaysinh\",\r\n    //     headerName: \"Date\",\r\n    //     width: 160,\r\n    //     renderCell: (params) => {\r\n    //       console.log(params);\r\n    //       return (\r\n    //         <div className=\"userListUser\">\r\n    //           {moment(`${params.row.ngaysinh}`).format(\"Do MMM YYYY\")}\r\n    //         </div>\r\n    //       );\r\n    //     },\r\n    //   },\r\n    //   {\r\n    //     field: \"dienthoai\",\r\n    //     headerName: \"Phone\",\r\n    //     width: 180,\r\n    //     renderCell: (params) => {\r\n    //       return <div className=\"userListUser\">{params.row.dienthoai}</div>;\r\n    //     },\r\n    //   },\r\n    //   {\r\n    //     field: \"createdAt\",\r\n    //     headerName: \"Date Create\",\r\n    //     width: 160,\r\n    //     renderCell: (params) => {\r\n    //       console.log(params);\r\n    //       return (\r\n    //         <div className=\"userListUser\">\r\n    //           {moment(`${params.row.createdAt}`).format(\"Do MMM YYYY\")}\r\n    //         </div>\r\n    //       );\r\n    //     },\r\n    //   },\r\n    //   {\r\n    //     field: \"updatedAt\",\r\n    //     headerName: \"Date UpdateAt\",\r\n    //     width: 170,\r\n    //     renderCell: (params) => {\r\n    //       console.log(params);\r\n    //       return (\r\n    //         <div className=\"userListUser\">\r\n    //           {moment(`${params.row.updatedAt}`).format(\"Do MMM YYYY\")}\r\n    //         </div>\r\n    //       );\r\n    //     },\r\n    //   },\r\n\r\n    //   {\r\n    //     field: \"action\",\r\n    //     headerName: \"Action\",\r\n    //     width: 150,\r\n    //     renderCell: (params) => {\r\n    //       return (\r\n    //         <>\r\n    //           <Link to={\"/newUser/\" + params.row.id}>\r\n    //             <button className=\"userListEdit\">Edit</button>\r\n    //           </Link>\r\n    //           <AiFillDelete\r\n    //             className=\"userListDelete\"\r\n    //             onClick={() => handleDelete(params.row.id)}\r\n    //           />\r\n    //         </>\r\n    //       );\r\n    //     },\r\n    //   },\r\n  ];\r\n  return (\r\n    <>\r\n      <UserLists />\r\n      <div className=\"userList\">\r\n        <DataGrid\r\n          getRowId={(r) => r.id}\r\n          rows={allUsers}\r\n          disableSelectionOnClick\r\n          columns={columns}\r\n          pageSize={8}\r\n          checkboxSelection\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserList;\r\n"]},"metadata":{},"sourceType":"module"}