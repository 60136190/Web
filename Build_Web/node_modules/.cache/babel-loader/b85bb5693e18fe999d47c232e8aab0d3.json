{"ast":null,"code":"import axios from \"axios\";\nimport * as types from \"../ActionTypes\";\nimport { ToastContainer, toast } from \"react-toastify\"; //Register\n\nexport const RegisterStart = () => ({\n  type: types.REGISTER_API_START\n});\n_c = RegisterStart;\nexport const RegisterSuccess = api => ({\n  type: types.REGISTER_API_SUCCESS,\n  payload: api\n});\n_c2 = RegisterSuccess;\nexport const RegisterFail = error => ({\n  type: types.REGISTER_API_FAIL,\n  payload: error\n}); //Login\n\n_c3 = RegisterFail;\nexport const LoginStart = () => ({\n  type: types.LOGIN_API_START\n});\n_c4 = LoginStart;\nexport const LoginSuccess = api => ({\n  type: types.LOGIN_API_SUCCESS,\n  payload: api\n});\n_c5 = LoginSuccess;\nexport const LoginFail = error => ({\n  type: types.LOGIN_API_FAIL,\n  payload: error\n}); //Logout\n\n_c6 = LoginFail;\nexport const LogoutStart = () => ({\n  type: types.LOGOUT_API_START\n});\n_c7 = LogoutStart;\nexport const LogoutSuccess = () => ({\n  type: types.LOGOUT_API_SUCCESS\n});\n_c8 = LogoutSuccess;\nexport const LogoutFail = () => ({\n  type: types.LOGOUT_API_FAIL\n}); //!Register\n\n_c9 = LogoutFail;\nexport const RegisterInitiate = (email, hoten, username, password, ngaysinh, gioitinh, dienthoai) => {\n  return async function (dispatch) {\n    dispatch(RegisterStart());\n    await axios.post(\"/admin/register\", {\n      email,\n      hoten,\n      username,\n      password,\n      ngaysinh,\n      gioitinh,\n      dienthoai\n    }).then(_ref => {\n      let {\n        user\n      } = _ref;\n      dispatch(RegisterSuccess(user, toast.success(\"Register Success Thank You!\"), window.location.href = \"/admin\"));\n    }).catch(error => {\n      dispatch(RegisterFail(toast.error(error.response.data.msg)));\n    });\n  };\n}; //!login\n\n_c10 = RegisterInitiate;\nexport const loginInitiate = (email, password) => {\n  return async function (dispatch) {\n    dispatch(LoginStart());\n    await axios.post(\"/admin/login\", {\n      email,\n      password\n    }).then(user => {\n      dispatch(LoginSuccess(user.data));\n    }).catch(error => {\n      dispatch(LoginFail(toast.error(error.data)));\n    });\n  };\n}; //!logout\n\nexport const LogoutInitiate = () => {\n  return async function (dispatch) {\n    dispatch(LogoutStart());\n    await axios.get(\"/admin/logout\").then(user => {\n      dispatch(LogoutSuccess(user, toast.success(\"Logout Success Thank You!\"), localStorage.removeItem(\"firstLogin\"), window.location.href = \"/login\"));\n    }).catch(error => {\n      dispatch(LoginFail(error));\n    });\n  };\n};\n_c11 = LogoutInitiate;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11;\n\n$RefreshReg$(_c, \"RegisterStart\");\n$RefreshReg$(_c2, \"RegisterSuccess\");\n$RefreshReg$(_c3, \"RegisterFail\");\n$RefreshReg$(_c4, \"LoginStart\");\n$RefreshReg$(_c5, \"LoginSuccess\");\n$RefreshReg$(_c6, \"LoginFail\");\n$RefreshReg$(_c7, \"LogoutStart\");\n$RefreshReg$(_c8, \"LogoutSuccess\");\n$RefreshReg$(_c9, \"LogoutFail\");\n$RefreshReg$(_c10, \"RegisterInitiate\");\n$RefreshReg$(_c11, \"LogoutInitiate\");","map":{"version":3,"sources":["D:/Full-Stack-Developer/Build-Web-Orther-Food-Full-Stack-Widosoft/client/src/redux/Action/ActionAdmin.js"],"names":["axios","types","ToastContainer","toast","RegisterStart","type","REGISTER_API_START","RegisterSuccess","api","REGISTER_API_SUCCESS","payload","RegisterFail","error","REGISTER_API_FAIL","LoginStart","LOGIN_API_START","LoginSuccess","LOGIN_API_SUCCESS","LoginFail","LOGIN_API_FAIL","LogoutStart","LOGOUT_API_START","LogoutSuccess","LOGOUT_API_SUCCESS","LogoutFail","LOGOUT_API_FAIL","RegisterInitiate","email","hoten","username","password","ngaysinh","gioitinh","dienthoai","dispatch","post","then","user","success","window","location","href","catch","response","data","msg","loginInitiate","LogoutInitiate","get","localStorage","removeItem"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport * as types from \"../ActionTypes\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\n\r\n//Register\r\nexport const RegisterStart = () => ({\r\n  type: types.REGISTER_API_START,\r\n});\r\nexport const RegisterSuccess = (api) => ({\r\n  type: types.REGISTER_API_SUCCESS,\r\n  payload: api,\r\n});\r\nexport const RegisterFail = (error) => ({\r\n  type: types.REGISTER_API_FAIL,\r\n  payload: error,\r\n});\r\n//Login\r\nexport const LoginStart = () => ({\r\n  type: types.LOGIN_API_START,\r\n});\r\nexport const LoginSuccess = (api) => ({\r\n  type: types.LOGIN_API_SUCCESS,\r\n  payload: api,\r\n});\r\nexport const LoginFail = (error) => ({\r\n  type: types.LOGIN_API_FAIL,\r\n  payload: error,\r\n});\r\n//Logout\r\nexport const LogoutStart = () => ({\r\n  type: types.LOGOUT_API_START,\r\n});\r\nexport const LogoutSuccess = () => ({\r\n  type: types.LOGOUT_API_SUCCESS,\r\n});\r\nexport const LogoutFail = () => ({\r\n  type: types.LOGOUT_API_FAIL,\r\n});\r\n\r\n//!Register\r\nexport const RegisterInitiate = (\r\n  email,\r\n  hoten,\r\n  username,\r\n  password,\r\n  ngaysinh,\r\n  gioitinh,\r\n  dienthoai\r\n) => {\r\n  return async function (dispatch) {\r\n    dispatch(RegisterStart());\r\n    await axios\r\n      .post(\"/admin/register\", {\r\n        email,\r\n        hoten,\r\n        username,\r\n        password,\r\n        ngaysinh,\r\n        gioitinh,\r\n        dienthoai,\r\n      })\r\n      .then(({ user }) => {\r\n        dispatch(\r\n          RegisterSuccess(\r\n            user,\r\n            toast.success(\"Register Success Thank You!\"),\r\n            (window.location.href = \"/admin\")\r\n          )\r\n        );\r\n      })\r\n      .catch((error) => {\r\n        dispatch(RegisterFail(toast.error(error.response.data.msg)));\r\n      });\r\n  };\r\n};\r\n//!login\r\nexport const loginInitiate = (email, password) => {\r\n  return async function (dispatch) {\r\n    dispatch(LoginStart());\r\n    await axios\r\n      .post(\"/admin/login\", { email, password })\r\n      .then((user) => {\r\n        dispatch(LoginSuccess(user.data));\r\n      })\r\n      .catch((error) => {\r\n        dispatch(LoginFail(toast.error(error.data)));\r\n      });\r\n  };\r\n};\r\n//!logout\r\nexport const LogoutInitiate = () => {\r\n  return async function (dispatch) {\r\n    dispatch(LogoutStart());\r\n    await axios\r\n      .get(\"/admin/logout\")\r\n      .then((user) => {\r\n        dispatch(\r\n          LogoutSuccess(\r\n            user,\r\n            toast.success(\"Logout Success Thank You!\"),\r\n            localStorage.removeItem(\"firstLogin\"),\r\n            (window.location.href = \"/login\")\r\n          )\r\n        );\r\n      })\r\n      .catch((error) => {\r\n        dispatch(LoginFail(error));\r\n      });\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}