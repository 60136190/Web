{"ast":null,"code":"var _jsxFileName = \"D:\\\\Full-Stack-Developer\\\\Build-Web-Orther-Food-Full-Stack-Widosoft\\\\client\\\\src\\\\Contexts\\\\GlobalState.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { GetAccountNewInitiate, InfoAdminInitiate, RefreshTokenInitiate } from \"../redux/Action/ActionAdmin\";\nimport { ProductApi, AdminApi, InfoAllUserApi } from \"../Imports/Index\";\nimport { GetAccountMuchInitiate } from \"../redux/Action/ActionInfoAllUser\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const GlobalState = /*#__PURE__*/createContext();\nexport const DataProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [callback, setCallback] = useState(false);\n  const {\n    Admin,\n    token\n  } = useSelector(state => state.authAdmin);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const firstLogin = localStorage.getItem(\"firstLogin\");\n\n    if (firstLogin) {\n      const refreshToken = async () => {\n        dispatch(RefreshTokenInitiate(Admin.accessToken));\n        setTimeout(() => {\n          refreshToken();\n        }, 10 * 60 * 1000);\n      };\n\n      refreshToken();\n    }\n  }, [callback]);\n  useEffect(() => {\n    if (token.accessToken) {\n      dispatch(InfoAdminInitiate(token.accessToken));\n      dispatch(GetAccountNewInitiate(token.accessToken));\n      dispatch(GetAccountMuchInitiate(token.accessToken));\n    }\n  }, [token.accessToken, callback]);\n  const data = {\n    callback: [callback, setCallback],\n    AdminApi: AdminApi(token.accessToken, callback),\n    ProductApi: ProductApi(callback),\n    InfoAllUserApi: InfoAllUserApi(token, callback)\n  };\n  return /*#__PURE__*/_jsxDEV(GlobalState.Provider, {\n    value: data,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 10\n  }, this);\n};\n\n_s(DataProvider, \"H40/sOxN0LQN6n6m5qNOVqIQ5Qs=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = DataProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"DataProvider\");","map":{"version":3,"sources":["D:/Full-Stack-Developer/Build-Web-Orther-Food-Full-Stack-Widosoft/client/src/Contexts/GlobalState.js"],"names":["React","createContext","useState","useEffect","useDispatch","useSelector","GetAccountNewInitiate","InfoAdminInitiate","RefreshTokenInitiate","ProductApi","AdminApi","InfoAllUserApi","GetAccountMuchInitiate","GlobalState","DataProvider","children","callback","setCallback","Admin","token","state","authAdmin","dispatch","firstLogin","localStorage","getItem","refreshToken","accessToken","setTimeout","data"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,EAAyCC,SAAzC,QAA0D,OAA1D;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SACEC,qBADF,EAEEC,iBAFF,EAGEC,oBAHF,QAIO,6BAJP;AAKA,SAASC,UAAT,EAAqBC,QAArB,EAA+BC,cAA/B,QAAqD,kBAArD;AACA,SAASC,sBAAT,QAAuC,mCAAvC;;AACA,OAAO,MAAMC,WAAW,gBAAGZ,aAAa,EAAjC;AACP,OAAO,MAAMa,YAAY,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AAC5C,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0Bf,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM;AAAEgB,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAmBd,WAAW,CAAEe,KAAD,IAAWA,KAAK,CAACC,SAAlB,CAApC;AACA,QAAMC,QAAQ,GAAGlB,WAAW,EAA5B;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMoB,UAAU,GAAGC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAnB;;AACA,QAAIF,UAAJ,EAAgB;AACd,YAAMG,YAAY,GAAG,YAAY;AAC/BJ,QAAAA,QAAQ,CAACd,oBAAoB,CAACU,KAAK,CAACS,WAAP,CAArB,CAAR;AACAC,QAAAA,UAAU,CAAC,MAAM;AACfF,UAAAA,YAAY;AACb,SAFS,EAEP,KAAK,EAAL,GAAU,IAFH,CAAV;AAGD,OALD;;AAMAA,MAAAA,YAAY;AACb;AACF,GAXQ,EAWN,CAACV,QAAD,CAXM,CAAT;AAYAb,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIgB,KAAK,CAACQ,WAAV,EAAuB;AACrBL,MAAAA,QAAQ,CAACf,iBAAiB,CAACY,KAAK,CAACQ,WAAP,CAAlB,CAAR;AACAL,MAAAA,QAAQ,CAAChB,qBAAqB,CAACa,KAAK,CAACQ,WAAP,CAAtB,CAAR;AACAL,MAAAA,QAAQ,CAACV,sBAAsB,CAACO,KAAK,CAACQ,WAAP,CAAvB,CAAR;AACD;AACF,GANQ,EAMN,CAACR,KAAK,CAACQ,WAAP,EAAoBX,QAApB,CANM,CAAT;AAOA,QAAMa,IAAI,GAAG;AACXb,IAAAA,QAAQ,EAAE,CAACA,QAAD,EAAWC,WAAX,CADC;AAEXP,IAAAA,QAAQ,EAAEA,QAAQ,CAACS,KAAK,CAACQ,WAAP,EAAoBX,QAApB,CAFP;AAGXP,IAAAA,UAAU,EAAEA,UAAU,CAACO,QAAD,CAHX;AAIXL,IAAAA,cAAc,EAAEA,cAAc,CAACQ,KAAD,EAAQH,QAAR;AAJnB,GAAb;AAMA,sBAAO,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEa,IAA7B;AAAA,cAAoCd;AAApC;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CA9BM;;GAAMD,Y;UAEcT,W,EACRD,W;;;KAHNU,Y","sourcesContent":["import React, { createContext, useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  GetAccountNewInitiate,\r\n  InfoAdminInitiate,\r\n  RefreshTokenInitiate,\r\n} from \"../redux/Action/ActionAdmin\";\r\nimport { ProductApi, AdminApi, InfoAllUserApi } from \"../Imports/Index\";\r\nimport { GetAccountMuchInitiate } from \"../redux/Action/ActionInfoAllUser\";\r\nexport const GlobalState = createContext();\r\nexport const DataProvider = ({ children }) => {\r\n  const [callback, setCallback] = useState(false);\r\n  const { Admin, token } = useSelector((state) => state.authAdmin);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    const firstLogin = localStorage.getItem(\"firstLogin\");\r\n    if (firstLogin) {\r\n      const refreshToken = async () => {\r\n        dispatch(RefreshTokenInitiate(Admin.accessToken));\r\n        setTimeout(() => {\r\n          refreshToken();\r\n        }, 10 * 60 * 1000);\r\n      };\r\n      refreshToken();\r\n    }\r\n  }, [callback]);\r\n  useEffect(() => {\r\n    if (token.accessToken) {\r\n      dispatch(InfoAdminInitiate(token.accessToken));\r\n      dispatch(GetAccountNewInitiate(token.accessToken));\r\n      dispatch(GetAccountMuchInitiate(token.accessToken));\r\n    }\r\n  }, [token.accessToken, callback]);\r\n  const data = {\r\n    callback: [callback, setCallback],\r\n    AdminApi: AdminApi(token.accessToken, callback),\r\n    ProductApi: ProductApi(callback),\r\n    InfoAllUserApi: InfoAllUserApi(token, callback),\r\n  };\r\n  return <GlobalState.Provider value={data}>{children}</GlobalState.Provider>;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}